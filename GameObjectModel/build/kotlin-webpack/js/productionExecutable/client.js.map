{"version":3,"file":"client.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAgB,OAAID,IAEpBD,EAAa,OAAIC,GAClB,CATD,CASGK,WAAY,KACf,O,0dCeYC,EAA4BC,EAAwCC,E,wBAAqB,E,oEAmCnG,OAAO,UAAQC,MAChB,C,WAaiBC,GACb,GAAe,IAAfA,EAAO,OAKT,MAAM,EAAM,8C,IAJG,IAAgB,EAAR,UAAQD,OAA/B,KAAe,E,EAAf,C,IAAIE,EAAW,UACX,UAAQA,GAAK,C,OADjB,EAAe,GAMhB,OAAOC,IACR,C,aAnDC,OAAO,UAAQH,MAChB,C,aA8DC,OAAO,UAAQA,MAChB,C,WAqBiBC,GACb,MAAe,IAAfA,EAAO,OACH,EAAM,6CAEN,EAAM,gDAEd,C,aCjH0D,YAAnB,C,WA0BlCG,GAIK,OADLC,QAAQC,IAAI,gBAA0B,EAARF,EAAMG,GAAY,IAAc,EAARH,EAAMI,IAC5DJ,CACF,C,YAGEA,GAEF,OADEA,EAAMK,kBACR,E,YAGEL,GACK,OAALA,CACF,C,YAGEA,GACK,OAALA,CACF,C,YAjDMM,EAAgCC,GAAhC,YAAgC,YACtB,c,IAER,YAAOC,WAAW,SAAU,OAA5B,WAA0D,MAAM,EAAM,mC,MAAtE,EAAD,oDAEG,cAAAC,GAAM,WAEhB,SAPK,C,qBCLc,UACnB,IACA,GACA,GACA,SACA,GACA,GACA,OACA,GACA,aACA,MACA,GACA,GACA,QACA,QACA,gBACA,GACA,QACA,UACA,MACA,QACA,YACA,OACA,OACA,QACA,QACA,QACA,GACA,SACA,UACA,aACA,SACA,aACA,QACA,UACA,YACA,MACA,OACA,OACA,KACA,QACA,OACA,SACA,QACA,UACA,cACA,SACA,SACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,QACA,YACA,YACA,SACA,eACA,gBACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,SACA,GACA,eACA,GACA,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,MACA,YACA,WACA,UACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,WACA,cACA,mBACA,qBACA,qBACA,kBACA,kBACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,aACA,cACA,eACA,OACA,SACA,UACA,YACA,aACA,aACA,cACA,WACA,OACA,OACA,eACA,qBACA,sBACA,QACA,GACA,GACA,GACA,GACA,cACA,cACA,YACA,GACA,GACA,YACA,SACA,QACA,QACA,SACA,QACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,eACA,aACA,gBACA,QACA,GACA,OACA,QACA,GACA,eACA,aACA,GACA,gBACA,GACA,GACA,gBACA,eACA,cACA,cACA,cACA,iBACA,gBACA,eACA,iBACA,eACA,eACA,eACA,kBACA,OACA,QACA,QACA,QACA,OACA,OACA,GACA,MACA,gBACA,GAjQJ,C,mDCCeC,GAAqBC,GAAA,UAAgB,cAEhD,QAA+B,CAAAD,GAFrB,C,YCCHE,EAAqBC,GAAuBF,GAAA,UAAgB,UAErE,QACuB,CAAAC,EAAUC,GAHzB,C,cCDYF,GAAA,UAAgB,YACrB,aAAK,EAAM,GACf,YACM,aAAK,EAAM,G,MAEN,yB,IAAA,2C,mBAAA,M,EAAA,OAEpB,SAPa,C,qBC8BJ,UAAQ,kBAAkB,eACzB,UAAQ,kBAAkB,eAAgB,kBAC1C,UCtBwC,EDmBpD,C,mDA1BAlB,EACAq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","sources":["webpack://client/webpack/universalModuleDefinition","webpack://client/../../../../webglmath/src/main/kotlin/Uniform.kt","webpack://client/../../../../client/src/main/kotlin/App.kt","webpack://client/../../../../client/src/main/kotlin/KeyNames.kt","webpack://client/../../../../client/src/main/kotlin/Material.kt","webpack://client/../../../../client/src/main/kotlin/Mesh.kt","webpack://client/../../../../client/src/main/kotlin/OrthoCamera.kt","webpack://client/../../../../client/src/main/kotlin/Program.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/kotlin.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Arrays.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/generated/_ArraysJs.kt","webpack://client/../../../../client/src/main/kotlin/QuadGeometry.kt","webpack://client/../../../../client/src/main/kotlin/Scene.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Standard.kt","webpack://client/../../../../client/src/main/kotlin/Shader.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Char.kt","webpack://client/../../../../client/src/main/kotlin/TriangleGeometry.kt","webpack://client/../../../../webglmath/src/main/kotlin/Drawable.kt","webpack://client/../../../../webglmath/src/main/kotlin/Geometry.kt","webpack://client/../../../../webglmath/src/main/kotlin/IVec1.kt","webpack://client/../../../../webglmath/src/main/kotlin/IVec1Array.kt","webpack://client/../../../../webglmath/src/main/kotlin/IVec2.kt","webpack://client/../../../../webglmath/src/main/kotlin/IVec3.kt","webpack://client/../../../../webglmath/src/main/kotlin/IVec4.kt","webpack://client/../../../../webglmath/src/main/kotlin/IVecArray.kt","webpack://client/../../../../webglmath/src/main/kotlin/Mat4.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/builtins/Library.kt","webpack://client/../../../../webglmath/src/main/kotlin/Mat4Array.kt","webpack://client/../../../../webglmath/src/main/kotlin/ProgramReflection.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Maps.kt","webpack://client/../../../../webglmath/src/main/kotlin/Sampler2D.kt","webpack://client/../../../../webglmath/src/main/kotlin/Sampler3D.kt","webpack://client/../../../../webglmath/src/main/kotlin/SamplerCube.kt","webpack://client/../../../../webglmath/src/main/kotlin/UniformProvider.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec1.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec1Array.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec2.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec2Array.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec3.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec3Array.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec4.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec4Array.kt","webpack://client/../../../../webglmath/src/main/kotlin/VecArray.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/libraries/stdlib/js/src/org.w3c/org.khronos.webgl.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/math.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Collections.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/js/math.polyfills.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/globalThis.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/math.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/ArrayBuffer.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/js.arrays/fill.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/js-builtin-sources/libraries/stdlib/jvm/builtins/Number.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/ArrayList.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collectionJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/LinkedHashSet.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Sets.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Ranges.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Sequences.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/builtins/Char.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/builtins/Primitives.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/BitMask.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/bitUtils.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/charSequenceJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/collectionsHacks.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/compareTo.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/coreRuntime.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/typeCheckUtils.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/hacks.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/longJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/NumbersJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/metadataUtils.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/numberConversion.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/rangeTo.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/reflectRuntime.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/generated/_DigitChars.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/Unit.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Collections.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashSet.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableCollection.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableList.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableMap.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableSet.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/ArrayFunctions.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Preconditions.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashMap.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashMapEntry.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/InternalHashMap.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/LinkedHashMap.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/exceptions.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/KClassImpl.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/primitives.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/reflection.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/StringBuilderJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/charJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/numberConversions.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/StringNumberConversions.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/regex.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/stringJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/generated/_ComparisonsJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/stringsCode.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractCollection.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractList.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractMap.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractSet.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/PrimitiveIterators.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Sequences.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/internal/progressionUtil.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/PrimitiveRanges.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/ProgressionIterators.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/Progressions.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Appendable.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Strings.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/arrays.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/noPackageHacks.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Tuples.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/HashCode.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Strings.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/InternalMap.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/MutableCollections.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Iterables.kt","webpack://client/webpack/bootstrap","webpack://client/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"client\"] = factory();\n\telse\n\t\troot[\"client\"] = factory();\n})(globalThis, () => {\nreturn ","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport org.khronos.webgl.WebGLTexture\r\nimport kotlin.reflect.KProperty\r\n\r\ninterface Texture {\r\n\tabstract val glTexture : WebGLTexture?\r\n}\r\n\r\ninterface Uniform {\r\n\tfun set(other: Uniform) : Uniform\r\n\tfun set(vararg values : Float) : Uniform\r\n\tfun set(firstValue : Int, vararg values : Int) : Uniform\r\n\tfun set(firstTexture : Texture, vararg moreTextures : Texture)\r\n\tfun getStorageSize() : Int\r\n\tinfix fun gets(other : Uniform){\r\n\t\tset(other)\r\n\t}\r\n\r\n\tfun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int = 0)\r\n}\r\n\r\ninterface UniformFloat : Uniform {\r\n\tabstract val storage : Float32Array\r\n\r\n\toverride fun getStorageSize() : Int{\r\n\t\treturn storage.length\r\n\t}\r\n\r\n\toverride fun set(other: Uniform) : Uniform {\r\n\t\tif(other is UniformFloat){\r\n\t\t\tfor(i : Int in 0 until storage.length) {\r\n\t    \t\tstorage[i] = if(i < other.storage.length) other.storage[i] else 0.0f\r\n\t    }\r\n    } else {\r\n\t\t\tthrow Error(\"Cannot set a uniform of floats from a non-float uniform.\")\r\n    }\r\n    return this\r\n\t}\r\n\r\n\toverride fun set(firstValue : Int, vararg values : Int) : Uniform {\r\n\t\tthrow Error(\"Cannot set int values to a float uniform.\")\r\n\t}\t\r\n\r\n\toverride fun set(firstTexture : Texture, vararg moreTextures : Texture){\r\n\t\tthrow Error(\"Cannot set a texture to a non-sampler uniform.\")\r\n\t}\r\n\r\n}\r\n\r\ninterface UniformInt : Uniform {\r\n\tabstract val storage : Int32Array\r\n\r\n\toverride fun getStorageSize() : Int{\r\n\t\treturn storage.length\r\n\t}\r\n\r\n\toverride fun set(other: Uniform) : Uniform {\r\n\t\tif(other is UniformInt){\r\n\t\t\tfor(i : Int in 0 until storage.length) {\r\n\t    \t\tstorage[i] = if(i < other.storage.length) other.storage[i] else 0\r\n\t    }\r\n    } else {\r\n\t\t\tthrow Error(\"Cannot set a uniform of ints from a non-int uniform.\")\r\n    }\r\n    return this\r\n\t}\r\n\r\n\toverride fun set(vararg values : Float) : Uniform {\r\n\t\tif(values.size == 0){\r\n\t\t\tfor(i : Int in 0 until storage.length) {\r\n\t    \t\tstorage[i] = 0\r\n\t    }\t\t\t\r\n\t\t} else {\r\n\t\t\tthrow Error(\"Cannot set float values to an int uniform.\")\r\n\t\t}\r\n\t\treturn this\r\n\t}\t\r\n\r\n\toverride fun set(firstTexture : Texture, vararg moreTextures : Texture){\r\n\t\tthrow Error(\"Cannot set a texture to a non-sampler uniform.\")\r\n\t}\r\n}\r\n\r\ninterface UniformSampler : Uniform {\r\n\tabstract val storage : Int32Array\r\n\tabstract val glTextures : Array<WebGLTexture?>\r\n\r\n\toverride fun getStorageSize() : Int{\r\n\t\treturn storage.length\r\n\t}\r\n\r\n\toverride fun set(other: Uniform) : Uniform {\r\n\t\tif(other is UniformSampler){\r\n\t\t\tfor(i : Int in 0 until storage.length) {\r\n\t    \t\tstorage[i] = if(i < other.storage.length) other.storage[i] else 0\r\n\t    \t\tglTextures[i] = other.glTextures.getOrNull(i)\r\n\t    }\r\n    } else {\r\n\t\t\tthrow Error(\"Cannot set a uniform of textures from a non-texture uniform.\")\r\n    }\r\n    return this\r\n\t}\r\n\r\n\toverride fun set(firstTexture : Texture, vararg moreTextures : Texture){\r\n\t\tglTextures[0] = firstTexture.glTexture\r\n\t\tfor(i : Int in 0 until storage.length) {\r\n\t\t\tglTextures[i+1] = moreTextures.getOrNull(i)?.glTexture\r\n\t\t}\r\n\t}\r\n\r\n\toverride fun set(vararg values : Float) : Uniform {\r\n\t\tif(values.size == 0){\r\n\t\t\tthrow Error(\"Cannot set no value to a texture uniform.\")\r\n\t\t} else {\r\n\t\t\tthrow Error(\"Cannot set float values to a texture uniform.\")\r\n\t\t}\r\n\t}\r\n\r\n\toverride fun set(firstValue : Int, vararg values : Int) : Uniform {\r\n\t\tthrow Error(\"Cannot set int values to a texture uniform.\")\r\n\t}\t\r\n}\r\n\r\n","import kotlinx.browser.document\nimport kotlinx.browser.window\nimport org.w3c.dom.HTMLDivElement\nimport org.w3c.dom.HTMLCanvasElement\nimport org.w3c.dom.events.*\nimport org.w3c.dom.Window\n\nclass App(val canvas : HTMLCanvasElement, val overlay : HTMLDivElement) {\n  val keysPressed = HashSet<String>()\n\n  val gl = (canvas.getContext(\"webgl2\", object{val alpha = false}) ?: throw Error(\"Browser does not support WebGL2\")) as WebGL2RenderingContext //#alpha# never make canvas transparent ˙HUN˙ ne legyen áttetsző a vászon  \n\n  val scene = Scene(gl)//#scene# this object is responsible for resource allocation and drawing ˙HUN˙ ez az objektum felel az erőforrások kezeléséért és kirajzolásáért\n  init {\n    resize()//## we adjust render resolution in a separate method, as we will also need it when the canvas is resized ˙HUN˙ rajzolási felbontás beállítása külön metódusban, mert ablakátméretezéskor is kell majd ugyanez\n  }\n\n  fun resize() {\n    canvas.width = canvas.clientWidth//#canvas.width# rendering resolution ˙HUN˙ rajzolási felbontás #canvas.clientWidth# canvas size ˙HUN˙ a vászon mérete \n    canvas.height = canvas.clientHeight\n    scene.resize(canvas)\n  }\n\n  @Suppress(\"UNUSED_PARAMETER\")\n  fun registerEventHandlers() {\n    document.onkeydown =  { //#{# locally defined function\n      event : KeyboardEvent ->\n      keysPressed.add( keyNames[event.keyCode] )\n    }\n\n    document.onkeyup = { \n      event : KeyboardEvent ->\n      keysPressed.remove( keyNames[event.keyCode] )\n    }\n\n    canvas.onmousedown = { \n      event : MouseEvent ->\n      // event.x.toInt()\n      // event.y.toInt()\n      console.log(\"Hello World! \" + event.x.toInt() + \" \" + event.y.toInt())\n      event\n    }\n\n    canvas.onmousemove = { \n      event : Event ->\n      event.stopPropagation()\n    }\n\n    canvas.onmouseup = { \n      event : Event ->\n      event // This line is a placeholder for event handling code. It has no effect, but avoids the \"unused parameter\" warning.\n    }\n\n    canvas.onmouseout = { \n      event : Event ->\n      event // This line is a placeholder for event handling code. It has no effect, but avoids the \"unused parameter\" warning.\n    }\n\n    window.requestAnimationFrame {//#requestAnimationFrame# trigger rendering\n      update()//#update# this method is responsible; for drawing a frame\n    }\n  }  \n\n  fun update() {\n    scene.update(keysPressed)    \n    window.requestAnimationFrame { update() }\n  }\n}\n\nfun main() {\n  val canvas = document.getElementById(\"canvas\") as HTMLCanvasElement\n  val overlay = document.getElementById(\"overlay\") as HTMLDivElement\n  overlay.innerHTML = \"\"\"<font color=\"red\">WebGL</font>\"\"\"\n\n  try{\n    val app = App(canvas, overlay)//#app# from this point on,; this object is responsible; for handling everything\n    app.registerEventHandlers()//#registerEventHandlers# we implement this; to make sure the app; knows when there is; something to do\n  } catch(e : Error) {\n    console.error(e.message)\n  }\n}","\nobject keyNames {\n  private val lookup = arrayOf (\n    \"\", // [0]\n    \"\", // [1]\n    \"\", // [2]\n    \"CANCEL\", // [3]\n    \"\", // [4]\n    \"\", // [5]\n    \"HELP\", // [6]\n    \"\", // [7]\n    \"BACK_SPACE\", // [8]\n    \"TAB\", // [9]\n    \"\", // [10]\n    \"\", // [11]\n    \"CLEAR\", // [12]\n    \"ENTER\", // [13]\n    \"ENTER_SPECIAL\", // [14]\n    \"\", // [15]\n    \"SHIFT\", // [16]\n    \"CONTROL\", // [17]\n    \"ALT\", // [18]\n    \"PAUSE\", // [19]\n    \"CAPS_LOCK\", // [20]\n    \"KANA\", // [21]\n    \"EISU\", // [22]\n    \"JUNJA\", // [23]\n    \"FINAL\", // [24]\n    \"HANJA\", // [25]\n    \"\", // [26]\n    \"ESCAPE\", // [27]\n    \"CONVERT\", // [28]\n    \"NONCONVERT\", // [29]\n    \"ACCEPT\", // [30]\n    \"MODECHANGE\", // [31]\n    \"SPACE\", // [32]\n    \"PAGE_UP\", // [33]\n    \"PAGE_DOWN\", // [34]\n    \"END\", // [35]\n    \"HOME\", // [36]\n    \"LEFT\", // [37]\n    \"UP\", // [38]\n    \"RIGHT\", // [39]\n    \"DOWN\", // [40]\n    \"SELECT\", // [41]\n    \"PRINT\", // [42]\n    \"EXECUTE\", // [43]\n    \"PRINTSCREEN\", // [44]\n    \"INSERT\", // [45]\n    \"DELETE\", // [46]\n    \"\", // [47]\n    \"0\", // [48]\n    \"1\", // [49]\n    \"2\", // [50]\n    \"3\", // [51]\n    \"4\", // [52]\n    \"5\", // [53]\n    \"6\", // [54]\n    \"7\", // [55]\n    \"8\", // [56]\n    \"9\", // [57]\n    \"COLON\", // [58]\n    \"SEMICOLON\", // [59]\n    \"LESS_THAN\", // [60]\n    \"EQUALS\", // [61]\n    \"GREATER_THAN\", // [62]\n    \"QUESTION_MARK\", // [63]\n    \"AT\", // [64]\n    \"A\", // [65]\n    \"B\", // [66]\n    \"C\", // [67]\n    \"D\", // [68]\n    \"E\", // [69]\n    \"F\", // [70]\n    \"G\", // [71]\n    \"H\", // [72]\n    \"I\", // [73]\n    \"J\", // [74]\n    \"K\", // [75]\n    \"L\", // [76]\n    \"M\", // [77]\n    \"N\", // [78]\n    \"O\", // [79]\n    \"P\", // [80]\n    \"Q\", // [81]\n    \"R\", // [82]\n    \"S\", // [83]\n    \"T\", // [84]\n    \"U\", // [85]\n    \"V\", // [86]\n    \"W\", // [87]\n    \"X\", // [88]\n    \"Y\", // [89]\n    \"Z\", // [90]\n    \"OS_KEY\", // [91] Windows Key (Windows) or Command Key (Mac)\n    \"\", // [92]\n    \"CONTEXT_MENU\", // [93]\n    \"\", // [94]\n    \"SLEEP\", // [95]\n    \"NUMPAD0\", // [96]\n    \"NUMPAD1\", // [97]\n    \"NUMPAD2\", // [98]\n    \"NUMPAD3\", // [99]\n    \"NUMPAD4\", // [100]\n    \"NUMPAD5\", // [101]\n    \"NUMPAD6\", // [102]\n    \"NUMPAD7\", // [103]\n    \"NUMPAD8\", // [104]\n    \"NUMPAD9\", // [105]\n    \"MULTIPLY\", // [106]\n    \"ADD\", // [107]\n    \"SEPARATOR\", // [108]\n    \"SUBTRACT\", // [109]\n    \"DECIMAL\", // [110]\n    \"DIVIDE\", // [111]\n    \"F1\", // [112]\n    \"F2\", // [113]\n    \"F3\", // [114]\n    \"F4\", // [115]\n    \"F5\", // [116]\n    \"F6\", // [117]\n    \"F7\", // [118]\n    \"F8\", // [119]\n    \"F9\", // [120]\n    \"F10\", // [121]\n    \"F11\", // [122]\n    \"F12\", // [123]\n    \"F13\", // [124]\n    \"F14\", // [125]\n    \"F15\", // [126]\n    \"F16\", // [127]\n    \"F17\", // [128]\n    \"F18\", // [129]\n    \"F19\", // [130]\n    \"F20\", // [131]\n    \"F21\", // [132]\n    \"F22\", // [133]\n    \"F23\", // [134]\n    \"F24\", // [135]\n    \"\", // [136]\n    \"\", // [137]\n    \"\", // [138]\n    \"\", // [139]\n    \"\", // [140]\n    \"\", // [141]\n    \"\", // [142]\n    \"\", // [143]\n    \"NUM_LOCK\", // [144]\n    \"SCROLL_LOCK\", // [145]\n    \"WIN_OEM_FJ_JISHO\", // [146]\n    \"WIN_OEM_FJ_MASSHOU\", // [147]\n    \"WIN_OEM_FJ_TOUROKU\", // [148]\n    \"WIN_OEM_FJ_LOYA\", // [149]\n    \"WIN_OEM_FJ_ROYA\", // [150]\n    \"\", // [151]\n    \"\", // [152]\n    \"\", // [153]\n    \"\", // [154]\n    \"\", // [155]\n    \"\", // [156]\n    \"\", // [157]\n    \"\", // [158]\n    \"\", // [159]\n    \"CIRCUMFLEX\", // [160]\n    \"EXCLAMATION\", // [161]\n    \"DOUBLE_QUOTE\", // [162]\n    \"HASH\", // [163]\n    \"DOLLAR\", // [164]\n    \"PERCENT\", // [165]\n    \"AMPERSAND\", // [166]\n    \"UNDERSCORE\", // [167]\n    \"OPEN_PAREN\", // [168]\n    \"CLOSE_PAREN\", // [169]\n    \"ASTERISK\", // [170]\n    \"PLUS\", // [171]\n    \"PIPE\", // [172]\n    \"HYPHEN_MINUS\", // [173]\n    \"OPEN_CURLY_BRACKET\", // [174]\n    \"CLOSE_CURLY_BRACKET\", // [175]\n    \"TILDE\", // [176]\n    \"\", // [177]\n    \"\", // [178]\n    \"\", // [179]\n    \"\", // [180]\n    \"VOLUME_MUTE\", // [181]\n    \"VOLUME_DOWN\", // [182]\n    \"VOLUME_UP\", // [183]\n    \"\", // [184]\n    \"\", // [185]\n    \"SEMICOLON\", // [186]\n    \"EQUALS\", // [187]\n    \"COMMA\", // [188]\n    \"MINUS\", // [189]\n    \"PERIOD\", // [190]\n    \"SLASH\", // [191]\n    \"BACK_QUOTE\", // [192]\n    \"\", // [193]\n    \"\", // [194]\n    \"\", // [195]\n    \"\", // [196]\n    \"\", // [197]\n    \"\", // [198]\n    \"\", // [199]\n    \"\", // [200]\n    \"\", // [201]\n    \"\", // [202]\n    \"\", // [203]\n    \"\", // [204]\n    \"\", // [205]\n    \"\", // [206]\n    \"\", // [207]\n    \"\", // [208]\n    \"\", // [209]\n    \"\", // [210]\n    \"\", // [211]\n    \"\", // [212]\n    \"\", // [213]\n    \"\", // [214]\n    \"\", // [215]\n    \"\", // [216]\n    \"\", // [217]\n    \"\", // [218]\n    \"OPEN_BRACKET\", // [219]\n    \"BACK_SLASH\", // [220]\n    \"CLOSE_BRACKET\", // [221]\n    \"QUOTE\", // [222]\n    \"\", // [223]\n    \"META\", // [224]\n    \"ALTGR\", // [225]\n    \"\", // [226]\n    \"WIN_ICO_HELP\", // [227]\n    \"WIN_ICO_00\", // [228]\n    \"\", // [229]\n    \"WIN_ICO_CLEAR\", // [230]\n    \"\", // [231]\n    \"\", // [232]\n    \"WIN_OEM_RESET\", // [233]\n    \"WIN_OEM_JUMP\", // [234]\n    \"WIN_OEM_PA1\", // [235]\n    \"WIN_OEM_PA2\", // [236]\n    \"WIN_OEM_PA3\", // [237]\n    \"WIN_OEM_WSCTRL\", // [238]\n    \"WIN_OEM_CUSEL\", // [239]\n    \"WIN_OEM_ATTN\", // [240]\n    \"WIN_OEM_FINISH\", // [241]\n    \"WIN_OEM_COPY\", // [242]\n    \"WIN_OEM_AUTO\", // [243]\n    \"WIN_OEM_ENLW\", // [244]\n    \"WIN_OEM_BACKTAB\", // [245]\n    \"ATTN\", // [246]\n    \"CRSEL\", // [247]\n    \"EXSEL\", // [248]\n    \"EREOF\", // [249]\n    \"PLAY\", // [250]\n    \"ZOOM\", // [251]\n    \"\", // [252]\n    \"PA1\", // [253]\n    \"WIN_OEM_CLEAR\", // [254]\n    \"\" // [255]\n  )\n\n  operator fun get(index : Int) : String {\n    return lookup[index]\n  }\n}\n\n","import vision.gears.webglmath.UniformProvider\r\n\r\nclass Material(program : Program) : UniformProvider(\"material\") {\r\n  init {\r\n    addComponentsAndGatherUniforms(program)\r\n  }\r\n}\r\n","import vision.gears.webglmath.UniformProvider\r\nimport vision.gears.webglmath.Geometry\r\n\r\nclass Mesh(material : Material, geometry : Geometry) : UniformProvider(\"mesh\") {\r\n\tinit{\r\n\t\taddComponentsAndGatherUniforms(\r\n                         material, geometry)\r\n\t}\r\n}\r\n\r\n","import vision.gears.webglmath.*\r\n\r\nclass OrthoCamera() : UniformProvider(\"camera\") {\r\n  val position = Vec2(0.0f, 0.0f) \r\n  var roll = 0.0f \r\n  val windowSize = Vec2(2.0f, 2.0f) \r\n  \r\n  val viewProjMatrix by Mat4()\r\n  init{\r\n    updateViewProjMatrix()\r\n  }\r\n\r\n  fun updateViewProjMatrix() { \r\n    viewProjMatrix.set(). \r\n      scale(0.5f, 0.5f). \r\n      scale(windowSize). \r\n      rotate(roll). \r\n      translate(position). \r\n      invert()\r\n  }\r\n  fun setAspectRatio(ar : Float) { \r\n    windowSize.x = windowSize.y * ar\r\n    updateViewProjMatrix()\r\n  }\r\n\r\n}\r\n","import org.khronos.webgl.WebGLRenderingContext as GL\nimport vision.gears.webglmath.UniformProvider\nimport vision.gears.webglmath.ProgramReflection\n\nclass Program(\n  val gl : WebGL2RenderingContext,\n  val vertexShader : Shader,\n  val fragmentShader : Shader,\n  attributeBindings : Array<String> = Program.PNT ) : UniformProvider(\"program\") {\n\n  val glProgram = gl.createProgram() ?: throw Error(\"Could not create WebGL program.\")\n\n  init {\n    gl.attachShader(glProgram, vertexShader.glShader) //#attach# OpenGL phraseology: you attach resources to one another\n    gl.attachShader(glProgram, fragmentShader.glShader)\n\n    var attributeIndex = 0\n    attributeBindings.forEach{\n      gl.bindAttribLocation(glProgram, attributeIndex++, it) //#vertex shader input 'it' is taken from vertex record at 'attributeIndex' \n    }    \n\n    gl.linkProgram(glProgram)\n    if (gl.getProgramParameter(glProgram, GL.LINK_STATUS) == false) {\n      throw Error(\"Could not link shaders [vertex shader: ${vertexShader.sourceUrl}]:[fragment shader: ${fragmentShader.sourceUrl}\\n${gl.getProgramInfoLog(this.glProgram)}\")\n    }\n\n    addComponentsAndGatherUniforms(ProgramReflection(gl, glProgram))\n    Program.all += this\n\n  }\n\n  companion object{ //#companion object# this is how you create class static members\n    val PC = arrayOf(\"vertexPosition\", \"vertexColor\")\n    val PNT = arrayOf(\"vertexPosition\", \"vertexNormal\", \"vertexTexCoord\")\n    var all = emptyArray<Program>()\n  }\n}",null,null,null,"import org.khronos.webgl.WebGLRenderingContext as GL\nimport org.khronos.webgl.Float32Array\nimport org.khronos.webgl.Uint16Array\nimport vision.gears.webglmath.*\n\nclass QuadGeometry(val gl : WebGL2RenderingContext) : Geometry () {\n\n  val vertexBuffer = gl.createBuffer()\n  init{\n    gl.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer) //#ARRAY_BUFFER# OpenGL dictionary:; array buffer means vertex buffer #bind# OpenGL phraseology:; Binding means: select as current. Further operations on the same target affect the bound resource.\n    gl.bufferData(GL.ARRAY_BUFFER,\n      Float32Array( arrayOf<Float>(\n        -0.5f, -0.5f, 0.5f,\n        -0.5f,  0.5f, 0.5f,\n        0.5f,  -0.5f, 0.5f,\n        0.5f, 0.5f, 0.5f //## vertex position data x, y, and z coordinates for 3 vertices\n      )),\n      GL.STATIC_DRAW)\n  }\n\n  val colorBuffer = gl.createBuffer()\n  init{\n    gl.bindBuffer(GL.ARRAY_BUFFER, colorBuffer) //#ARRAY_BUFFER# OpenGL dictionary:; array buffer means vertex buffer #bind# OpenGL phraseology:; Binding means: select as current. Further operations on the same target affect the bound resource.\n    gl.bufferData(GL.ARRAY_BUFFER,\n      Float32Array( arrayOf<Float>(\n        0.5f, 0.5f, 0.5f,\n        0.5f,  0.0f, 0.5f,\n        0.5f,  0.5f, 0.0f,\n        0.0f, 0.5f, 0.5f //## vertex position data x, y, and z coordinates for 3 vertices\n      )),\n      GL.STATIC_DRAW)\n  }\n\n  val indexBuffer = gl.createBuffer()\n  init{\n    gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, indexBuffer) //#ELEMENT_ARRAY_BUFFER# OpenGL dictionary:; element array buffer: index buffer\n    gl.bufferData(GL.ELEMENT_ARRAY_BUFFER,\n      Uint16Array( arrayOf<Short>(\n        0, 1, 2,\n        1, 2, 3\n      )),\n      GL.STATIC_DRAW)\n  }\n\n  val inputLayout = gl.createVertexArray() //#VertexArray# OpenGL dictionary:; vertex array object (VAO) is input layout\n  init{\n    gl.bindVertexArray(inputLayout)\n\n    gl.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer)\n    gl.enableVertexAttribArray(0)\n    gl.vertexAttribPointer(0, //#0# this explains how attribute 0 can be found in the vertex buffer\n      3, GL.FLOAT, //< three pieces of float\n      false, //< do not normalize (make unit length)\n      0, //< tightly packed\n      0 //< data starts at array start\n    )\n\n    gl.bindBuffer(GL.ARRAY_BUFFER, colorBuffer)\n    gl.enableVertexAttribArray(1)\n    gl.vertexAttribPointer(1, //#0# this explains how attribute 0 can be found in the vertex buffer\n      3, GL.FLOAT, //< three pieces of float\n      false, //< do not normalize (make unit length)\n      0, //< tightly packed\n      0 //< data starts at array start\n    )\n\n    gl.bindVertexArray(null)\n  }\n\n  override fun draw() {\n\n    gl.bindVertexArray(inputLayout)\n    gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, indexBuffer)  \n\n    gl.drawElements(GL.TRIANGLES, 6, GL.UNSIGNED_SHORT, 0) //#3# pipeline is all set up, draw three indices worth of geometry\n  }\n\n}\n","import org.w3c.dom.HTMLCanvasElement\nimport org.khronos.webgl.WebGLRenderingContext as GL //# GL# we need this for the constants declared ˙HUN˙ a constansok miatt kell\nimport vision.gears.webglmath.*\nimport kotlin.js.Date\n\nclass Scene (\n  val gl : WebGL2RenderingContext){\n\n  val camera = OrthoCamera()\n\n  val avatarPos = Vec2(0.0f, 0.0f)\n  var avatarRotation = 0.0f\n  val avatarScale = Vec2(1.0f, 1.0f)\n\n  var posX = 0.0f\n  var posY = 0.0f\n\n  var modelmatrix = Mat4 ()\n  var imatrix = Mat4 ()\n\n  val vsIdle = Shader(gl, GL.VERTEX_SHADER, \"idle-vs.glsl\")\n  val fsSolid = Shader(gl, GL.FRAGMENT_SHADER, \"solid-fs.glsl\")\n  val fsStriped = Shader(gl, GL.FRAGMENT_SHADER, \"striped-fs.glsl\")\n\n  val solidProgram = Program(gl, vsIdle, fsSolid, Program.PC)\n  val stripedProgram = Program(gl, vsIdle, fsStriped, Program.PC)\n\n  val quadGeometry = QuadGeometry(gl)\n  val triangleGeometry = TriangleGeometry(gl)\n\n   val stripedMaterialThick = Material (stripedProgram).apply{\n    this[\"stripeWidth\"]?.set (0.6f)\n  }\n\n   val stripedMaterialThin = Material (stripedProgram).apply{\n    this[\"stripeWidth\"]?.set (0.05f)\n  }\n\n  val thickStripedTriangleMesh = Mesh (stripedMaterialThick, triangleGeometry)\n  val thinStripedTriangleMesh = Mesh (stripedMaterialThin, triangleGeometry)\n\n  fun resize(canvas : HTMLCanvasElement) {\n    gl.viewport(0, 0, canvas.width, canvas.height)//#viewport# tell the rasterizer which part of the canvas to draw to ˙HUN˙ a raszterizáló ide rajzoljon\n    camera.setAspectRatio(canvas.width.toFloat() / canvas.height.toFloat())\n  }\n\n  @Suppress(\"UNUSED_PARAMETER\")\n  fun update(keysPressed : Set<String>) {\n    val timeAtFirstFrame = Date().getTime()\n    var timeAtLastFrame =  timeAtFirstFrame\n\n    val timeAtThisFrame = Date().getTime()\n    val dt = (timeAtThisFrame - timeAtLastFrame)\n          .toFloat() / 1000.0f\n    val t = (timeAtThisFrame - timeAtFirstFrame)\n          .toFloat() / 1000.0f\n    timeAtLastFrame = timeAtThisFrame\n\n   if(\"W\" in keysPressed) {\n      camera.position.y +=  0.01f\n    }\n    if(\"A\" in keysPressed) {\n      camera.position.x -=  0.01f\n    }\n    if(\"S\" in keysPressed) {\n      camera.position.y -=  0.01f\n    }\n    if(\"D\" in keysPressed) {\n      camera.position.x +=  0.01f\n    }\n    if(\"Q\" in keysPressed) {\n      camera.roll +=  0.01f\n    }\n    if(\"E\" in keysPressed) {\n      camera.roll -=  0.01f\n    }\n\n    if(\"RIGHT\" in keysPressed){\n      avatarPos.x  +=  0.01f\n    }\n    if(\"LEFT\" in keysPressed){\n      avatarPos.x  -=  0.01f\n    }\n    if(\"UP\" in keysPressed){\n      avatarPos.y  +=  0.01f\n    }\n    if(\"DOWN\" in keysPressed){\n      avatarPos.y  -=  0.01f\n    }\n\n    if(\"F\" in keysPressed) {\n      avatarRotation += 0.001f\n    }\n    if(\"R\" in keysPressed) {\n      avatarScale *= 1.001f\n    }\n\n    gl.clearColor(1.0f, 0.0f, 0.0f, 1.0f)//## red, green, blue, alpha in [0, 1]\n    gl.clearDepth(1.0f)//## will be useful in 3D ˙HUN˙ 3D-ben lesz hasznos\n    gl.clear(GL.COLOR_BUFFER_BIT or GL.DEPTH_BUFFER_BIT)//#or# bitwise OR of flags\n\n    camera.updateViewProjMatrix();\n\n    modelmatrix.set().scale(avatarScale.x, avatarScale.y).rotate(avatarRotation, 0.0f, 0.0f, 1.0f).translate(avatarPos.x, avatarPos.y)\n    imatrix.set()\n\n    thickStripedTriangleMesh.draw()\n    modelmatrix.commit(gl, gl.getUniformLocation(stripedProgram.glProgram, \"gameObject.modelMatrix\")!!)\n    camera.viewProjMatrix.commit(gl, gl.getUniformLocation(stripedProgram.glProgram, \"camera.viewProjMatrix\")!!)\n\n    thinStripedTriangleMesh.draw()\n    imatrix.commit(gl, gl.getUniformLocation(stripedProgram.glProgram, \"gameObject.modelMatrix\")!!)\n    camera.viewProjMatrix.commit(gl, gl.getUniformLocation(stripedProgram.glProgram, \"camera.viewProjMatrix\")!!)\n  }\n}\n",null,"import kotlin.browser.document\nimport kotlin.browser.window\nimport org.w3c.xhr.XMLHttpRequest\nimport org.w3c.dom.events.*\nimport org.w3c.dom.HTMLScriptElement\nimport org.khronos.webgl.WebGLRenderingContext as GL\n\nclass Shader (\n  val gl : WebGL2RenderingContext,\n  val shaderType : Int,\n  val sourceUrl : String) {\n\n  val glShader = gl.createShader(shaderType) //#createShader# get an OpenGL shader ID #shaderType# vertex or fragment shader\n\n  init {\n    val request = XMLHttpRequest()\n    request.overrideMimeType(\"text/plain\")\n    request.open(\"GET\", sourceUrl, false)\n    var errorMessage : String? = null\n    request.onloadend = {\n      val source = request.responseText\n      if(source == \"\"){\n        errorMessage = \"${sourceUrl} is empty.\"\n      } else {\n        val marked = Regex(\"[^\" + '\\u0000' + \"-\" + '\\u007F'+ \"]\").replace(source) {\n          match -> '\\u001b' + \"[46m\" + match.value + '\\u001b' + \"[31m\" }\n        if(marked != source) {\n          errorMessage = \"Shader source file ${sourceUrl} has \\u001b[46mnon-ASCII\\u001b[31m characters.\\n\" + marked\n        } else {\n          gl.shaderSource(glShader, source) //#shaderSource# associate source code with ID\n          gl.compileShader(glShader) //#compileShader# compile GLSL code to binary\n          if (gl.getShaderParameter(glShader, GL.COMPILE_STATUS) == false) {\n            val errorPrefix = Regex(\"ERROR: 0\")\n            errorMessage = \"Shader ${sourceUrl} had compilation errors.\\n${errorPrefix.replace(gl.getShaderInfoLog(glShader)?:\"FAILED TO OBTAIN LOG.\", request.responseURL)}\" //#getShaderInfoLog# check if succeeded and get compilation error message\n          }\n        }\n      }\n    } \n    request.send()\n    if(errorMessage != null){\n        throw Error(errorMessage)\n    }\n  }\n}\n",null,"import org.khronos.webgl.WebGLRenderingContext as GL\nimport org.khronos.webgl.Float32Array\nimport org.khronos.webgl.Uint16Array\nimport vision.gears.webglmath.*\n\nclass TriangleGeometry(val gl : WebGL2RenderingContext) : Geometry () {\n\n  val vertexBuffer = gl.createBuffer()\n  init{\n    gl.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer) //#ARRAY_BUFFER# OpenGL dictionary:; array buffer means vertex buffer #bind# OpenGL phraseology:; Binding means: select as current. Further operations on the same target affect the bound resource.\n    gl.bufferData(GL.ARRAY_BUFFER,\n      Float32Array( arrayOf<Float>(\n        -0.5f, -0.5f, 0.5f,\n        -0.5f,  0.5f, 0.5f,\n         0.5f,  0.0f, 0.5f //## vertex position data x, y, and z coordinates for 3 vertices\n      )),\n      GL.STATIC_DRAW)\n  }\n\n  val colorBuffer = gl.createBuffer()\n  init{\n    gl.bindBuffer(GL.ARRAY_BUFFER, colorBuffer) //#ARRAY_BUFFER# OpenGL dictionary:; array buffer means vertex buffer #bind# OpenGL phraseology:; Binding means: select as current. Further operations on the same target affect the bound resource.\n    gl.bufferData(GL.ARRAY_BUFFER,\n      Float32Array( arrayOf<Float>(\n        1.0f, 0.0f, 0.0f,\n        0.0f,  1.0f, 0.0f,\n        0.0f,  0.0f, 1.0f //## vertex position data x, y, and z coordinates for 3 vertices\n      )),\n      GL.STATIC_DRAW)\n  }\n\n  val indexBuffer = gl.createBuffer()\n  init{\n    gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, indexBuffer) //#ELEMENT_ARRAY_BUFFER# OpenGL dictionary:; element array buffer: index buffer\n    gl.bufferData(GL.ELEMENT_ARRAY_BUFFER,\n      Uint16Array( arrayOf<Short>(\n        0, 1, 2\n      )),\n      GL.STATIC_DRAW)\n  }\n\n  val inputLayout = gl.createVertexArray() //#VertexArray# OpenGL dictionary:; vertex array object (VAO) is input layout\n  init{\n    gl.bindVertexArray(inputLayout)\n\n    gl.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer)\n    gl.enableVertexAttribArray(0)\n    gl.vertexAttribPointer(0, //#0# this explains how attribute 0 can be found in the vertex buffer\n      3, GL.FLOAT, //< three pieces of float\n      false, //< do not normalize (make unit length)\n      0, //< tightly packed\n      0 //< data starts at array start\n    )\n\n    gl.bindBuffer(GL.ARRAY_BUFFER, colorBuffer)\n    gl.enableVertexAttribArray(1)\n    gl.vertexAttribPointer(1, //#0# this explains how attribute 0 can be found in the vertex buffer\n      3, GL.FLOAT, //< three pieces of float\n      false, //< do not normalize (make unit length)\n      0, //< tightly packed\n      0 //< data starts at array start\n    )\n    \n    gl.bindVertexArray(null)\n  }\n\n  override fun draw() {\n\n    gl.bindVertexArray(inputLayout)\n    gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, indexBuffer)  \n\n    gl.drawElements(GL.TRIANGLES, 3, GL.UNSIGNED_SHORT, 0) //#3# pipeline is all set up, draw three indices worth of geometry\n  }\n\n}\n","package vision.gears.webglmath\r\n\r\nabstract class Drawable {\r\n  open fun gatherUniforms(target : UniformProvider){}\r\n  abstract fun draw(vararg uniformProviders : UniformProvider)\r\n  open fun drawWithOverrides(overrides : Map<String, UniformProvider>, vararg uniformProviders : UniformProvider){\r\n    draw(*uniformProviders)\r\n  }\r\n}\r\n","package vision.gears.webglmath\r\n\r\nabstract class Geometry : Drawable() {\r\n\tabstract fun draw()\r\n\r\n  final override fun draw(vararg uniformProviders : UniformProvider){\r\n  \tdraw()\r\n  }\r\n\r\n  // This implementation is identical to Drawable::drawWithOverrides. Is there a way to make the method final withot overriding it?\r\n  final override fun drawWithOverrides(overrides : Map<String, UniformProvider>, vararg uniformProviders : UniformProvider) {\r\n  \tdraw(*uniformProviders)\r\n\t}\r\n  // This empty implementation is identical to Drawable::drawWithOverrides. Is there a way to make the method final withot overriding it?\r\n  final override fun gatherUniforms(target : UniformProvider){}\r\n}\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\nclass IVec1(backingStorage: Int32Array?, offset: Int = 0) : UniformInt {\r\n\r\n  constructor(u: Int = 0) : this(null, 0){\r\n    storage[0] = u\r\n  }\r\n  constructor(other : IVec1) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Int32Array = backingStorage?.subarray(offset, offset+1)?:Int32Array(1)\r\n  inline var x : Int\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline val xx : IVec2\r\n    get() = IVec2(storage[0], storage[0])\r\n  inline val xxx : IVec3\r\n    get() = IVec3(storage[0], storage[0], storage[0])\r\n  inline val xxxx : IVec4\r\n    get() = IVec4(storage[0], storage[0], storage[0], storage[0])\r\n\r\n  inline fun clone() : IVec1 {\r\n    return IVec1(this)\r\n  }\r\n\r\n  override fun set(firstValue : Int, vararg values : Int) : IVec1 {\r\n    storage[0] = firstValue\r\n    return this \r\n  }\r\n\r\n  companion object {\r\n    val zeros = IVec1()\r\n    val ones = IVec1(1)\r\n  }\r\n\r\n  inline fun clamp(minVal: IVec1 = IVec1.zeros, maxVal: IVec1 = IVec1.ones) : IVec1 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryPlus() : IVec1 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun times(scalar : Int) : IVec1 {\r\n    return IVec1(\r\n      storage[0] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Int) : IVec1 {\r\n    return IVec1(\r\n      storage[0] / scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Int) {\r\n    storage[0] *= scalar\r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Int) {\r\n    storage[0] /= scalar\r\n  }    \r\n\r\n  operator inline fun plusAssign(other : IVec1) {\r\n    storage[0] += other.storage[0]\r\n  }\r\n\r\n  operator inline fun plus(other : IVec1) : IVec1 {\r\n    return IVec1(\r\n      storage[0] + other.storage[0]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : IVec1) {\r\n    storage[0] -= other.storage[0]\r\n  }\r\n\r\n  operator inline fun minus(other : IVec1) : IVec1 {\r\n    return IVec1(\r\n      storage[0] - other.storage[0]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : IVec1) {\r\n    storage[0] *= other.storage[0]\r\n  }\r\n\r\n  operator inline fun times(other : IVec1) : IVec1 {\r\n    return IVec1(\r\n      storage[0] * other.storage[0]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : IVec1) {\r\n    storage[0] /= other.storage[0]\r\n  }\r\n\r\n  operator inline fun div(other : IVec1) : IVec1 {\r\n    return IVec1(\r\n      storage[0] / other.storage[0]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Int {\r\n    return storage[0] * storage[0]\r\n  }\r\n\r\n  inline fun length() : Int {\r\n    return storage[0]\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : IVec1 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): IVec1 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: IVec1) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform1iv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.times(v: IVec1) = IVec1(this * v.storage[0])\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.div(v: IVec1) = IVec1(this / v.storage[0])\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\nimport kotlin.math.sqrt\r\n\r\nclass IVec1Array(backingStorage: Int32Array?, startIndex: Int = 0, endIndex: Int = 0) : IVecArray() {\r\n\r\n  constructor(size : Int) : this(null, size, size) {}\r\n\r\n  override val storage = backingStorage?.subarray(startIndex, endIndex)?:Int32Array(startIndex)\r\n\r\n  override fun set(firstValue : Int, vararg values : Int) : IVec1Array {\r\n    storage[0] = firstValue\r\n    for(i in 1 until storage.length) {\r\n      storage[i] = values.getOrNull(i-1) ?: 0\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator fun get(i : Int) : IVec1{\r\n    return IVec1(storage, i)\r\n  }\r\n\r\n  fun subarray(begin : Int, end : Int) : IVec1Array {\r\n    return IVec1Array(storage, begin, end)\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : IVec1Array {\r\n    provider.register(property.name + \"[0]\", this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): IVec1Array {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: IVec1Array) {\r\n    set(value)\r\n  }  \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform1iv(uniformLocation, storage);\r\n  }\r\n} ","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\nclass IVec2(backingStorage: Int32Array?, offset: Int = 0) : UniformInt {\r\n\r\n  constructor(u: Int = 0, v: Int = 0) : this(null, 0){\r\n    storage[0] = u\r\n    storage[1] = v\r\n  }\r\n  constructor(other : IVec1, v: Int = 0) : this(other.storage[0], v ){}\r\n  constructor(other : IVec2) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Int32Array = backingStorage?.subarray(offset, offset+2)?:Int32Array(2)\r\n  inline var x : Int\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline var y : Int\r\n    get() = storage[1]\r\n    set(value) { storage[1] = value }\r\n  inline val xy0 : IVec3\r\n    get() = IVec3(storage[0], storage[1], 0)\r\n  inline val xy00 : IVec4\r\n    get() = IVec4(storage[0], storage[1], 0, 0)    \r\n  inline val xy01 : IVec4\r\n    get() = IVec4(storage[0], storage[1], 0, 1)\r\n\r\n  inline fun clone() : IVec2 {\r\n    return IVec2(this)\r\n  }\r\n\r\n  override fun set(firstValue : Int, vararg values : Int) : IVec2 {\r\n    storage[0] = firstValue\r\n    storage[1] = values.getOrElse(0) {0}\r\n    return this\r\n  }\r\n\r\n  companion object {\r\n    val zeros = IVec2()\r\n    val ones = IVec2(1, 1) \r\n\r\n    inline fun makeRandom(minVal: IVec2 = IVec2.zeros, maxVal: IVec2 = IVec2.ones) : IVec2 {\r\n      return IVec2(\r\n          Random.nextInt() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0],\r\n          Random.nextInt() * (maxVal.storage[1] - minVal.storage[1]) + minVal.storage[1]\r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Int = 0, maxVal: Int = 1) : IVec2 {\r\n      return IVec2.makeRandom(IVec2(minVal, minVal), IVec2(maxVal, maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun randomize(minVal: IVec2 = IVec2.zeros, maxVal: IVec2 = IVec2.ones){\r\n    set(IVec2.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun randomize(minVal: Int = 0, maxVal: Int = 1){\r\n    randomize(IVec2(minVal, minVal), IVec2(maxVal, maxVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: IVec2 = IVec2.zeros, maxVal: IVec2 = IVec2.ones) : IVec2 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[1] < minVal.storage[1]){\r\n      storage[1] = minVal.storage[1]\r\n    }\r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    if(storage[1] > maxVal.storage[1]){\r\n      storage[1] = maxVal.storage[1]\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryPlus() : IVec2 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : IVec2 {\r\n    return IVec2(-storage[0], -storage[1])\r\n  }\r\n\r\n  operator inline fun times(scalar : Int) : IVec2 {\r\n    return IVec2(\r\n      storage[0] * scalar,\r\n      storage[1] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Int) : IVec2 {\r\n    return IVec2(\r\n      storage[0] / scalar,\r\n      storage[1] / scalar      \r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Int) {\r\n    storage[0] *= scalar\r\n    storage[1] *= scalar\r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Int) {\r\n    storage[0] /= scalar\r\n    storage[1] /= scalar\r\n  }\r\n\r\n  operator inline fun plusAssign(other : IVec2) {\r\n    storage[0] += other.storage[0]\r\n    storage[1] += other.storage[1]\r\n  }\r\n\r\n  operator inline fun plus(other : IVec2) : IVec2 {\r\n    return IVec2(\r\n      storage[0] + other.storage[0],\r\n      storage[1] + other.storage[1]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : IVec2) {\r\n    storage[0] -= other.storage[0]\r\n    storage[1] -= other.storage[1]\r\n  }\r\n\r\n  operator inline fun minus(other : IVec2) : IVec2 {\r\n    return IVec2(\r\n      storage[0] - other.storage[0],\r\n      storage[1] - other.storage[1]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : IVec2) {\r\n    storage[0] *= other.storage[0]\r\n    storage[1] *= other.storage[1]\r\n  }\r\n\r\n  operator inline fun times(other : IVec2) : IVec2 {\r\n    return IVec2(\r\n      storage[0] * other.storage[0],\r\n      storage[1] * other.storage[1]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : IVec2) {\r\n    storage[0] /= other.storage[0]\r\n    storage[1] /= other.storage[1]\r\n  }\r\n\r\n  operator inline fun div(other : IVec2) : IVec2 {\r\n    return IVec2(\r\n      storage[0] / other.storage[0],\r\n      storage[1] / other.storage[1]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Int {\r\n    return storage[0] * storage[0] + storage[1] * storage[1]\r\n  }\r\n\r\n  infix inline fun dot(other : IVec2) : Int {\r\n    return (\r\n     storage[0] * other.storage[0] +\r\n     storage[1] * other.storage[1] )\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : IVec2 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): IVec2 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: IVec2) {\r\n    set(value)\r\n  }\r\n  \r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform2iv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.times(v: IVec2) = IVec2(this * v.storage[0], this * v.storage[1])\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.div(v: IVec2) = IVec2(this / v.storage[0], this / v.storage[1])\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\n\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\nclass IVec3(backingStorage: Int32Array?, offset: Int = 0) : UniformInt {\r\n\r\n  constructor(u: Int = 0, v: Int = 0, s: Int = 0) : this(null, 0){\r\n    storage[0] = u\r\n    storage[1] = v\r\n    storage[2] = s\r\n  }\r\n  constructor(other : IVec1, v: Int = 0, s: Int = 0) : this(other.storage[0], v, s){}\r\n  constructor(other : IVec2, s: Int = 0) : this(other.storage[0], other.storage[1], s){}\r\n  constructor(other : IVec3) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n  constructor(other : IVec4) : this(other.storage[0]/other.storage[3], other.storage[1]/other.storage[3], other.storage[2]/other.storage[3]){}\r\n\r\n  override val storage: Int32Array = backingStorage?.subarray(offset, offset+3)?:Int32Array(3)\r\n  inline var x : Int\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline var y : Int\r\n    get() = storage[1]\r\n    set(value) { storage[1] = value }\r\n  inline var z : Int\r\n    get() = storage[2]\r\n    set(value) { storage[2] = value }\r\n  inline var xy : IVec2\r\n    get() = IVec2(storage)\r\n    set(value) { IVec2(storage).set(value) }\r\n  inline val xyz0 : IVec4\r\n    get() = IVec4(storage[0], storage[1], storage[2], 0)    \r\n  inline val xyz1 : IVec4\r\n    get() = IVec4(storage[0], storage[1], storage[2], 1)\r\n\r\n  inline fun clone() : IVec3 {\r\n    return IVec3(this)\r\n  }\r\n\r\n  override fun set(firstValue : Int, vararg values : Int) : IVec3 {\r\n    storage[0] = firstValue\r\n    storage[1] = values.getOrElse(0) {0}\r\n    storage[2] = values.getOrElse(1) {0}    \r\n    return this\r\n  }\r\n\r\n  companion object {\r\n    val zeros = IVec3()\r\n    val ones = IVec3(1, 1, 1) \r\n\r\n    inline fun makeRandom(minVal: IVec3 = IVec3.zeros, maxVal: IVec3 = IVec3.ones) : IVec3 {\r\n      return IVec3(\r\n          Random.nextInt() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0],\r\n          Random.nextInt() * (maxVal.storage[1] - minVal.storage[1]) + minVal.storage[1],\r\n          Random.nextInt() * (maxVal.storage[2] - minVal.storage[2]) + minVal.storage[2]                    \r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Int = 0, maxVal: Int = 1) : IVec3 {\r\n      return IVec3.makeRandom(IVec3(minVal, minVal, minVal), IVec3(maxVal, maxVal, maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun randomize(minVal: IVec3 = IVec3.zeros, maxVal: IVec3 = IVec3.ones){\r\n    set(IVec3.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun randomize(minVal: Int = 0, maxVal: Int = 1){\r\n    randomize(IVec3(minVal, minVal, minVal), IVec3(maxVal, maxVal, maxVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: IVec3 = IVec3.zeros, maxVal: IVec3 = IVec3.ones) : IVec3 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[1] < minVal.storage[1]){\r\n      storage[1] = minVal.storage[1]\r\n    }\r\n    if(storage[2] < minVal.storage[2]){\r\n      storage[2] = minVal.storage[2]\r\n    }\r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    if(storage[1] > maxVal.storage[1]){\r\n      storage[1] = maxVal.storage[1]\r\n    }\r\n    if(storage[2] > maxVal.storage[2]){\r\n      storage[2] = maxVal.storage[2]\r\n    }        \r\n    return this\r\n  }\r\n\r\n  operator inline fun get(index : Int) : Int {\r\n    return storage[index]\r\n  }\r\n\r\n  operator fun set(index: Int, value: Int) {\r\n    storage[index] = value \r\n  }  \r\n\r\n  operator inline fun unaryPlus() : IVec3 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : IVec3 {\r\n    return IVec3(-storage[0], -storage[1], -storage[2])\r\n  }\r\n\r\n  operator inline fun times(scalar : Int) : IVec3 {\r\n    return IVec3(\r\n      storage[0] * scalar,\r\n      storage[1] * scalar,\r\n      storage[2] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Int) : IVec3 {\r\n    return IVec3(\r\n      storage[0] / scalar,\r\n      storage[1] / scalar,\r\n      storage[2] / scalar      \r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Int) {\r\n    storage[0] *= scalar\r\n    storage[1] *= scalar\r\n    storage[2] *= scalar    \r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Int) {\r\n    storage[0] /= scalar\r\n    storage[1] /= scalar\r\n    storage[2] /= scalar\r\n  }\r\n\r\n  operator inline fun plusAssign(other : IVec3) {\r\n    storage[0] += other.storage[0]\r\n    storage[1] += other.storage[1]\r\n    storage[2] += other.storage[2]\r\n  }\r\n\r\n  operator inline fun plus(other : IVec3) : IVec3 {\r\n    return IVec3(\r\n      storage[0] + other.storage[0],\r\n      storage[1] + other.storage[1],\r\n      storage[2] + other.storage[2]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : IVec3) {\r\n    storage[0] -= other.storage[0]\r\n    storage[1] -= other.storage[1]\r\n    storage[2] -= other.storage[2]\r\n  }\r\n\r\n  operator inline fun minus(other : IVec3) : IVec3 {\r\n    return IVec3(\r\n      storage[0] - other.storage[0],\r\n      storage[1] - other.storage[1],\r\n      storage[2] - other.storage[2]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : IVec3) {\r\n    storage[0] *= other.storage[0]\r\n    storage[1] *= other.storage[1]\r\n    storage[2] *= other.storage[2]\r\n  }\r\n\r\n  operator inline fun times(other : IVec3) : IVec3 {\r\n    return IVec3(\r\n      storage[0] * other.storage[0],\r\n      storage[1] * other.storage[1],\r\n      storage[2] * other.storage[2]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : IVec3) {\r\n    storage[0] /= other.storage[0]\r\n    storage[1] /= other.storage[1]\r\n    storage[2] /= other.storage[2]\r\n  }\r\n\r\n  operator inline fun div(other : IVec3) : IVec3 {\r\n    return IVec3(\r\n      storage[0] / other.storage[0],\r\n      storage[1] / other.storage[1],\r\n      storage[2] / other.storage[2]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Int {\r\n    return storage[0] * storage[0] + storage[1] * storage[1] + storage[2] * storage[2]\r\n  }\r\n\r\n  infix inline fun dot(other : IVec3) : Int {\r\n    return (\r\n      storage[0] * other.storage[0] +\r\n      storage[1] * other.storage[1] +\r\n      storage[2] * other.storage[2] )\r\n  }\r\n\r\n  infix inline fun cross(other : IVec3) : IVec3 {\r\n    return IVec3(\r\n      storage[1] * other.storage[2] - storage[2] * other.storage[1],\r\n      storage[2] * other.storage[0] - storage[0] * other.storage[2],\r\n      storage[0] * other.storage[1] - storage[1] * other.storage[0])\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : IVec3 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): IVec3 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: IVec3) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform3iv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.times(v: IVec3) = IVec3(v.x * this, v.y * this, v.z * this)\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.div(v: IVec3) = IVec3(this / v.x, this / v.y, this / v.z)","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\nclass IVec4(backingStorage: Int32Array?, offset: Int = 0) : UniformInt {\r\n\r\n  constructor(u: Int = 0, v: Int = 0, s: Int = 0, t: Int = 1) : this(null, 0){\r\n    storage[0] = u\r\n    storage[1] = v\r\n    storage[2] = s\r\n    storage[3] = t\r\n  }\r\n  constructor(other : IVec1, v: Int = 0, s: Int = 0, w: Int = 1) : this(other.storage[0], v, s, w){}\r\n  constructor(other : IVec2, s: Int = 0, w: Int = 1) : this(other.storage[0], other.storage[1], s, w){}\r\n  constructor(other : IVec3, w: Int = 1) : this(other.storage[0], other.storage[1], other.storage[2], w){}\r\n  constructor(other : IVec4) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Int32Array = backingStorage?.subarray(offset, offset+4)?:Int32Array(4)\r\n  inline var x : Int\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline var y : Int\r\n    get() = storage[1]\r\n    set(value) { storage[1] = value }\r\n  inline var z : Int\r\n    get() = storage[2]\r\n    set(value) { storage[2] = value }\r\n  inline var w : Int\r\n    get() = storage[3]\r\n    set(value) { storage[3] = value }    \r\n  inline var xy : IVec2\r\n    get() = IVec2(storage)\r\n    set(value) { IVec2(storage).set(value) }\r\n  inline var xyz : IVec3\r\n    get() = IVec3(storage)\r\n    set(value) { IVec3(storage).set(value) }\r\n\r\n  inline fun clone() : IVec4 {\r\n    return IVec4(this)\r\n  }\r\n\r\n  override fun set(firstValue : Int, vararg values : Int) : IVec4 {\r\n    storage[0] = firstValue\r\n    storage[1] = values.getOrElse(0) {0}\r\n    storage[2] = values.getOrElse(1) {0}\r\n    storage[3] = values.getOrElse(2) {0}    \r\n    return this\r\n  }\r\n\r\n  companion object {\r\n    val zeros = IVec4(0, 0, 0, 0)\r\n    val ones = IVec4(1, 1, 1, 1) \r\n\r\n    inline fun makeRandom(minVal: IVec4 = IVec4.zeros, maxVal: IVec4 = IVec4.ones) : IVec4 {\r\n      return IVec4(\r\n          Random.nextInt() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0],\r\n          Random.nextInt() * (maxVal.storage[1] - minVal.storage[1]) + minVal.storage[1],\r\n          Random.nextInt() * (maxVal.storage[2] - minVal.storage[2]) + minVal.storage[2],                    \r\n          Random.nextInt() * (maxVal.storage[3] - minVal.storage[3]) + minVal.storage[3]\r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Int = 0, maxVal: Int = 1) : IVec4 {\r\n      return IVec4.makeRandom(IVec4(minVal, minVal, minVal, minVal), IVec4(maxVal, maxVal, maxVal, maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun setRandom(minVal: IVec4 = IVec4.zeros, maxVal: IVec4 = IVec4.ones){\r\n    set(IVec4.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun setRandom(minVal: Int = 0, maxVal: Int = 1){\r\n    setRandom(IVec4(minVal, minVal, minVal, minVal), IVec4(maxVal, maxVal, maxVal, minVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: IVec4 = IVec4.zeros, maxVal: IVec4 = IVec4.ones) : IVec4 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[1] < minVal.storage[1]){\r\n      storage[1] = minVal.storage[1]\r\n    }\r\n    if(storage[2] < minVal.storage[2]){\r\n      storage[2] = minVal.storage[2]\r\n    }\r\n    if(storage[3] < minVal.storage[3]){\r\n      storage[3] = minVal.storage[3]\r\n    }    \r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    if(storage[1] > maxVal.storage[1]){\r\n      storage[1] = maxVal.storage[1]\r\n    }\r\n    if(storage[2] > maxVal.storage[2]){\r\n      storage[2] = maxVal.storage[2]\r\n    }        \r\n    if(storage[3] > maxVal.storage[3]){\r\n      storage[3] = maxVal.storage[3]\r\n    }            \r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryPlus() : IVec4 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : IVec4 {\r\n    return IVec4(-storage[0], -storage[1], -storage[2], -storage[3])\r\n  }\r\n\r\n  operator inline fun times(scalar : Int) : IVec4 {\r\n    return IVec4(\r\n      storage[0] * scalar,\r\n      storage[1] * scalar,\r\n      storage[2] * scalar,\r\n      storage[3] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Int) : IVec4 {\r\n    return IVec4(\r\n      storage[0] / scalar,\r\n      storage[1] / scalar,\r\n      storage[2] / scalar,\r\n      storage[3] / scalar      \r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Int) {\r\n    storage[0] *= scalar\r\n    storage[1] *= scalar\r\n    storage[2] *= scalar    \r\n    storage[3] *= scalar\r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Int) {\r\n    storage[0] /= scalar\r\n    storage[1] /= scalar\r\n    storage[2] /= scalar\r\n    storage[3] /= scalar\r\n  }  \r\n\r\n  operator inline fun plusAssign(other : IVec4) {\r\n    storage[0] += other.storage[0]\r\n    storage[1] += other.storage[1]\r\n    storage[2] += other.storage[2]\r\n    storage[3] += other.storage[3]\r\n  }\r\n\r\n  operator inline fun plus(other : IVec4) : IVec4 {\r\n    return IVec4(\r\n      storage[0] + other.storage[0],\r\n      storage[1] + other.storage[1],\r\n      storage[2] + other.storage[2],\r\n      storage[3] + other.storage[3]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : IVec4) {\r\n    storage[0] -= other.storage[0]\r\n    storage[1] -= other.storage[1]\r\n    storage[2] -= other.storage[2]\r\n    storage[3] -= other.storage[3]\r\n  }\r\n\r\n  operator inline fun minus(other : IVec4) : IVec4 {\r\n    return IVec4(\r\n      storage[0] - other.storage[0],\r\n      storage[1] - other.storage[1],\r\n      storage[2] - other.storage[2],\r\n      storage[3] - other.storage[3]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : IVec4) {\r\n    storage[0] *= other.storage[0]\r\n    storage[1] *= other.storage[1]\r\n    storage[2] *= other.storage[2]\r\n    storage[3] *= other.storage[3]\r\n  }\r\n\r\n  operator inline fun times(other : IVec4) : IVec4 {\r\n    return IVec4(\r\n      storage[0] * other.storage[0],\r\n      storage[1] * other.storage[1],\r\n      storage[2] * other.storage[2],\r\n      storage[3] * other.storage[3]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : IVec4) {\r\n    storage[0] /= other.storage[0]\r\n    storage[1] /= other.storage[1]\r\n    storage[2] /= other.storage[2]\r\n    storage[3] /= other.storage[3]\r\n  }\r\n\r\n  operator inline fun div(other : IVec4) : IVec4 {\r\n    return IVec4(\r\n      storage[0] / other.storage[0],\r\n      storage[1] / other.storage[1],\r\n      storage[2] / other.storage[2],\r\n      storage[3] / other.storage[3]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Int {\r\n    return storage[0] * storage[0] + storage[1] * storage[1] + storage[2] * storage[2] + storage[3] * storage[3]\r\n  }\r\n\r\n  infix inline fun dot(other : IVec4) : Int {\r\n    return (\r\n      storage[0] * other.storage[0] +\r\n      storage[1] * other.storage[1] +\r\n      storage[2] * other.storage[2] +\r\n      storage[3] * other.storage[3] )\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : IVec4 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): IVec4 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: IVec4) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform4iv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.times(v: IVec4) = IVec4(this * v.storage[0], this * v.storage[1], this * v.storage[2], this * v.storage[3])\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.div(v: IVec4) = IVec4(this / v.storage[0], this / v.storage[1], this / v.storage[2], this / v.storage[3])\r\n","package vision.gears.webglmath\r\n\r\nabstract class IVecArray : UniformInt {\r\n\r\n}\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.math.sqrt\r\nimport kotlin.math.cos\r\nimport kotlin.math.sin\r\n\r\nclass Mat4 (backingStorage: Float32Array?, offset: Int = 0) : UniformFloat {\r\n\r\n  constructor(\r\n//    m00 : Float = 1.0f, m01: Float = 0.0f, m02: Float = 0.0f, m03: Float = 0.0f,\r\n//    m10 : Float = 0.0f, m11: Float = 1.0f, m12: Float = 0.0f, m13: Float = 0.0f,\r\n//    m20 : Float = 0.0f, m21: Float = 0.0f, m22: Float = 1.0f, m23: Float = 0.0f,\r\n//    m30 : Float = 0.0f, m31: Float = 0.0f, m32: Float = 0.0f, m33: Float = 1.0f) : this(null, 0){\r\n    vararg elements : Float ) : this(null, 0){\r\n    val allElements = Array<Float>(16) {\r\n      i : Int ->\r\n      elements.getOrNull((i % 4)*4 + i/4)?: if(i%5==0) 1.0f else 0.0f\r\n    }\r\n    storage.set(allElements)\r\n  }\r\n  constructor(other : Mat4) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Float32Array = backingStorage?.subarray(offset, offset+16)?:Float32Array(16)\r\n\r\n  fun clone() : Mat4 {\r\n    return Mat4(this)\r\n  }\r\n\r\n  override fun set(vararg values : Float ) : Mat4 {\r\n    val allElements = Array<Float>(16) {\r\n      i : Int ->\r\n      values.getOrNull((i % 4)*4 + i/4)?: if(i%5==0) 1.0f else 0.0f\r\n    }\r\n    storage.set(allElements)\r\n    return this\r\n  }\r\n\r\n  override fun set(other : Uniform) : Mat4{\r\n    if(other is Mat4) {\r\n      storage.set(other.storage)\r\n    } else {\r\n      throw Error(\"A Mat4 cannot be set from a Uniform of another type.\")\r\n    }\r\n    return this\r\n  }  \r\n\r\n  fun fromQuaternion(x : Float, y : Float, z : Float, w : Float){\r\n    storage[ 0] = 2f * (w*w + x*x) - 1f\r\n    storage[ 1] = 2f * (x*y - w*z)    \r\n    storage[ 2] = 2f * (x*z + w*y)\r\n    storage[ 3] = 0f\r\n    storage[ 4] = 2f * (x*y + w*z)    \r\n    storage[ 5] = 2f * (w*w + y*y) - 1f\r\n    storage[ 6] = 2f * (y*z - w*x)\r\n    storage[ 7] = 0f\r\n    storage[ 8] = 2f * (x*z - w*y)    \r\n    storage[ 9] = 2f * (y*z + w*x)\r\n    storage[10] = 2f * (w*w + z*z) - 1f\r\n    storage[11] = 0f    \r\n    storage[12] = 0f        \r\n    storage[13] = 0f        \r\n    storage[14] = 0f        \r\n    storage[15] = 1f                \r\n  }\r\n\r\n  fun fromQuaternion(q : Vec4){\r\n    fromQuaternion(q.x, q.y, q.z, q.w)\r\n  }\r\n\r\n  fun rotateByQuaternion(q : Vec4) : Mat4{\r\n    val qq = Mat4()\r\n    qq.fromQuaternion(q)\r\n    timesAssign(qq)\r\n    return this\r\n  }  \r\n\r\n  fun premul(m : Mat4) : Mat4 {\r\n    val n00 = storage[0]\r\n    val n01 = storage[4]\r\n    val n02 = storage[8]\r\n    val n03 = storage[12]\r\n    val n10 = storage[1]\r\n    val n11 = storage[5]\r\n    val n12 = storage[9]\r\n    val n13 = storage[13]\r\n    val n20 = storage[2]\r\n    val n21 = storage[6]\r\n    val n22 = storage[10]\r\n    val n23 = storage[14]\r\n    val n30 = storage[3]\r\n    val n31 = storage[7]\r\n    val n32 = storage[11]\r\n    val n33 = storage[15]\r\n    val m00 = m.storage[0]\r\n    val m01 = m.storage[4]\r\n    val m02 = m.storage[8]\r\n    val m03 = m.storage[12]\r\n    val m10 = m.storage[1]\r\n    val m11 = m.storage[5]\r\n    val m12 = m.storage[9]\r\n    val m13 = m.storage[13]\r\n    val m20 = m.storage[2]\r\n    val m21 = m.storage[6]\r\n    val m22 = m.storage[10]\r\n    val m23 = m.storage[14]\r\n    val m30 = m.storage[3]\r\n    val m31 = m.storage[7]\r\n    val m32 = m.storage[11]\r\n    val m33 = m.storage[15]\r\n    storage[0] = (m00 * n00) + (m01 * n10) + (m02 * n20) + (m03 * n30)\r\n    storage[1] = (m10 * n00) + (m11 * n10) + (m12 * n20) + (m13 * n30)\r\n    storage[2] = (m20 * n00) + (m21 * n10) + (m22 * n20) + (m23 * n30)\r\n    storage[3] = (m30 * n00) + (m31 * n10) + (m32 * n20) + (m33 * n30)\r\n    storage[4] = (m00 * n01) + (m01 * n11) + (m02 * n21) + (m03 * n31)\r\n    storage[5] = (m10 * n01) + (m11 * n11) + (m12 * n21) + (m13 * n31)\r\n    storage[6] = (m20 * n01) + (m21 * n11) + (m22 * n21) + (m23 * n31)\r\n    storage[7] = (m30 * n01) + (m31 * n11) + (m32 * n21) + (m33 * n31)\r\n    storage[8] = (m00 * n02) + (m01 * n12) + (m02 * n22) + (m03 * n32)\r\n    storage[9] = (m10 * n02) + (m11 * n12) + (m12 * n22) + (m13 * n32)\r\n    storage[10] = (m20 * n02) + (m21 * n12) + (m22 * n22) + (m23 * n32)\r\n    storage[11] = (m30 * n02) + (m31 * n12) + (m32 * n22) + (m33 * n32)\r\n    storage[12] = (m00 * n03) + (m01 * n13) + (m02 * n23) + (m03 * n33)\r\n    storage[13] = (m10 * n03) + (m11 * n13) + (m12 * n23) + (m13 * n33)\r\n    storage[14] = (m20 * n03) + (m21 * n13) + (m22 * n23) + (m23 * n33)\r\n    storage[15] = (m30 * n03) + (m31 * n13) + (m32 * n23) + (m33 * n33)\r\n    return this\r\n  }\r\n\r\n  operator fun timesAssign(m : Mat4){\r\n    val m00 = storage[0]\r\n    val m01 = storage[4]\r\n    val m02 = storage[8]\r\n    val m03 = storage[12]\r\n    val m10 = storage[1]\r\n    val m11 = storage[5]\r\n    val m12 = storage[9]\r\n    val m13 = storage[13]\r\n    val m20 = storage[2]\r\n    val m21 = storage[6]\r\n    val m22 = storage[10]\r\n    val m23 = storage[14]\r\n    val m30 = storage[3]\r\n    val m31 = storage[7]\r\n    val m32 = storage[11]\r\n    val m33 = storage[15]\r\n    val n00 = m.storage[0]\r\n    val n01 = m.storage[4]\r\n    val n02 = m.storage[8]\r\n    val n03 = m.storage[12]\r\n    val n10 = m.storage[1]\r\n    val n11 = m.storage[5]\r\n    val n12 = m.storage[9]\r\n    val n13 = m.storage[13]\r\n    val n20 = m.storage[2]\r\n    val n21 = m.storage[6]\r\n    val n22 = m.storage[10]\r\n    val n23 = m.storage[14]\r\n    val n30 = m.storage[3]\r\n    val n31 = m.storage[7]\r\n    val n32 = m.storage[11]\r\n    val n33 = m.storage[15]\r\n    storage[0] = (m00 * n00) + (m01 * n10) + (m02 * n20) + (m03 * n30)\r\n    storage[1] = (m10 * n00) + (m11 * n10) + (m12 * n20) + (m13 * n30)\r\n    storage[2] = (m20 * n00) + (m21 * n10) + (m22 * n20) + (m23 * n30)\r\n    storage[3] = (m30 * n00) + (m31 * n10) + (m32 * n20) + (m33 * n30)\r\n    storage[4] = (m00 * n01) + (m01 * n11) + (m02 * n21) + (m03 * n31)\r\n    storage[5] = (m10 * n01) + (m11 * n11) + (m12 * n21) + (m13 * n31)\r\n    storage[6] = (m20 * n01) + (m21 * n11) + (m22 * n21) + (m23 * n31)\r\n    storage[7] = (m30 * n01) + (m31 * n11) + (m32 * n21) + (m33 * n31)\r\n    storage[8] = (m00 * n02) + (m01 * n12) + (m02 * n22) + (m03 * n32)\r\n    storage[9] = (m10 * n02) + (m11 * n12) + (m12 * n22) + (m13 * n32)\r\n    storage[10] = (m20 * n02) + (m21 * n12) + (m22 * n22) + (m23 * n32)\r\n    storage[11] = (m30 * n02) + (m31 * n12) + (m32 * n22) + (m33 * n32)\r\n    storage[12] = (m00 * n03) + (m01 * n13) + (m02 * n23) + (m03 * n33)\r\n    storage[13] = (m10 * n03) + (m11 * n13) + (m12 * n23) + (m13 * n33)\r\n    storage[14] = (m20 * n03) + (m21 * n13) + (m22 * n23) + (m23 * n33)\r\n    storage[15] = (m30 * n03) + (m31 * n13) + (m32 * n23) + (m33 * n33)\r\n  }\r\n\r\n  operator fun times(m : Mat4) : Mat4 {\r\n    val res = Mat4(this)\r\n    res *= m\r\n    return res\r\n  }\r\n\r\n  operator fun timesAssign(s : Float) {\r\n    storage[ 0] *= s\r\n    storage[ 1] *= s\r\n    storage[ 2] *= s\r\n    storage[ 3] *= s\r\n    storage[ 4] *= s\r\n    storage[ 5] *= s\r\n    storage[ 6] *= s\r\n    storage[ 7] *= s\r\n    storage[ 8] *= s\r\n    storage[ 9] *= s\r\n    storage[10] *= s\r\n    storage[12] *= s\r\n    storage[13] *= s\r\n    storage[14] *= s\r\n    storage[15] *= s\r\n  }\r\n\r\n  operator fun times(s : Float) : Mat4 {\r\n    val res = Mat4(this)\r\n    res *= s\r\n    return res    \r\n  }\r\n\r\n  operator fun times(v : Vec4) : Vec4 {\r\n    val vp = Vec4()\r\n    vp.storage[0] = storage[ 0] * v.storage[0] + storage[ 1] * v.storage[1] + storage[ 2] * v.storage[2] + storage[ 3] * v.storage[3]\r\n    vp.storage[1] = storage[ 4] * v.storage[0] + storage[ 5] * v.storage[1] + storage[ 6] * v.storage[2] + storage[ 7] * v.storage[3]\r\n    vp.storage[2] = storage[ 8] * v.storage[0] + storage[ 9] * v.storage[1] + storage[10] * v.storage[2] + storage[11] * v.storage[3]\r\n    vp.storage[3] = storage[12] * v.storage[0] + storage[13] * v.storage[1] + storage[14] * v.storage[2] + storage[15] * v.storage[3]        \r\n    return vp    \r\n  }\r\n\r\n  fun scale(s : Vec2) : Mat4 { return scale(s.storage[0], s.storage[1], 1.0f)}\r\n  fun scale(s : Vec3) : Mat4 { return scale(s.storage[0], s.storage[1], s.storage[2])}  \r\n  fun scale(sx : Float = 1.0f, sy : Float = 1.0f, sz : Float = 1.0f) : Mat4 {\r\n    storage[ 0] *= sx\r\n    storage[ 1] *= sx\r\n    storage[ 2] *= sx\r\n    storage[ 3] *= sx\r\n    storage[ 4] *= sy\r\n    storage[ 5] *= sy\r\n    storage[ 6] *= sy\r\n    storage[ 7] *= sy\r\n    storage[ 8] *= sz\r\n    storage[ 9] *= sz\r\n    storage[10] *= sz\r\n    storage[11] *= sz\r\n    return this  \r\n  }\r\n\r\n  fun rotate(angle : Float, axis : Vec3) : Mat4 { return rotate(angle, axis.storage[0], axis.storage[1], axis.storage[2])}\r\n  fun rotate(angle : Float = 0.0f, axisX : Float = 0.0f, axisY : Float = 0.0f, axisZ : Float = 0.0f) : Mat4 {\r\n    var x = axisX\r\n    var y = axisY\r\n    var z = axisZ        \r\n    val axisLength2 = x*x + y*y + z*z\r\n    if(axisLength2 < 0.0001f){\r\n      x=0.0f\r\n      y=0.0f\r\n      z=1.0f\r\n    } else if(axisLength2 < 0.999f || axisLength2 > 1.001f) {\r\n      val axisLength = sqrt(axisLength2)\r\n      x /= axisLength\r\n      y /= axisLength\r\n      z /= axisLength\r\n    }\r\n    val cosa = cos(angle)\r\n    val sina = sin(angle)\r\n    val C = 1.0f - cosa\r\n    val m11 = x * x * C + cosa\r\n    val m21 = x * y * C - z * sina\r\n    val m31 = x * z * C + y * sina\r\n    val m12 = y * x * C + z * sina\r\n    val m22 = y * y * C + cosa\r\n    val m32 = y * z * C - x * sina\r\n    val m13 = z * x * C - y * sina\r\n    val m23 = z * y * C + x * sina\r\n    val m33 = z * z * C + cosa\r\n    val t0  = storage[ 0] * m11 + storage[ 4] * m21 + storage[ 8] * m31\r\n    val t4  = storage[ 0] * m12 + storage[ 4] * m22 + storage[ 8] * m32\r\n    val t8  = storage[ 0] * m13 + storage[ 4] * m23 + storage[ 8] * m33\r\n    val t1  = storage[ 1] * m11 + storage[ 5] * m21 + storage[ 9] * m31\r\n    val t5  = storage[ 1] * m12 + storage[ 5] * m22 + storage[ 9] * m32\r\n    val t9  = storage[ 1] * m13 + storage[ 5] * m23 + storage[ 9] * m33\r\n    val t2  = storage[ 2] * m11 + storage[ 6] * m21 + storage[10] * m31\r\n    val t6  = storage[ 2] * m12 + storage[ 6] * m22 + storage[10] * m32\r\n    val t10 = storage[ 2] * m13 + storage[ 6] * m23 + storage[10] * m33\r\n    val t3  = storage[ 3] * m11 + storage[ 7] * m21 + storage[11] * m31\r\n    val t7  = storage[ 3] * m12 + storage[ 7] * m22 + storage[11] * m32\r\n    val t11 = storage[ 3] * m13 + storage[ 7] * m23 + storage[11] * m33\r\n    storage[ 0] = t0 \r\n    storage[ 4] = t4 \r\n    storage[ 8] = t8 \r\n    storage[ 1] = t1 \r\n    storage[ 5] = t5 \r\n    storage[ 9] = t9 \r\n    storage[ 2] = t2 \r\n    storage[ 6] = t6 \r\n    storage[10] = t10\r\n    storage[ 3] = t3 \r\n    storage[ 7] = t7 \r\n    storage[11] = t11\r\n    return this  \r\n  }\r\n\r\n  fun translate(t : Vec2) : Mat4 { return translate(t.storage[0], t.storage[1])}  \r\n  fun translate(t : Vec3) : Mat4 { return translate(t.storage[0], t.storage[1], t.storage[2])}  \r\n  fun translate(x : Float = 0.0f, y : Float = 0.0f, z : Float = 0.0f) : Mat4 {\r\n    storage[ 0] += storage[12] * x\r\n    storage[ 4] += storage[12] * y\r\n    storage[ 8] += storage[12] * z\r\n    storage[ 1] += storage[13] * x\r\n    storage[ 5] += storage[13] * y\r\n    storage[ 9] += storage[13] * z\r\n    storage[ 2] += storage[14] * x\r\n    storage[ 6] += storage[14] * y\r\n    storage[10] += storage[14] * z  \r\n    storage[ 3] += storage[15] * x\r\n    storage[ 7] += storage[15] * y\r\n    storage[11] += storage[15] * z\r\n    return this      \r\n  }\r\n\r\n  fun transpose() : Mat4 {\r\n    var temp = storage[4]\r\n    storage[4] = storage[1]\r\n    storage[1] = temp\r\n    temp = storage[8]\r\n    storage[8] = storage[2]\r\n    storage[2] = temp\r\n    temp = storage[12]\r\n    storage[12] = storage[3]\r\n    storage[3] = temp\r\n    temp = storage[9]\r\n    storage[9] = storage[6]\r\n    storage[6] = temp\r\n    temp = storage[13]\r\n    storage[13] = storage[7]\r\n    storage[7] = temp\r\n    temp = storage[14]\r\n    storage[14] = storage[11]\r\n    storage[11] = temp\r\n    return this  \r\n  }\r\n\r\n  fun invert() : Mat4 {\r\n    val a00 = storage[0]\r\n    val a01 = storage[1]\r\n    val a02 = storage[2]\r\n    val a03 = storage[3]\r\n    val m000 = storage[4]\r\n    val m001 = storage[5]\r\n    val m002 = storage[6]\r\n    val m003 = storage[7]\r\n    val m100 = storage[8]\r\n    val m101 = storage[9]\r\n    val m102 = storage[10]\r\n    val m103 = storage[11]\r\n    val m200 = storage[12]\r\n    val m201 = storage[13]\r\n    val m202 = storage[14]\r\n    val m203 = storage[15]\r\n    val b00 = a00 * m001 - a01 * m000\r\n    val b01 = a00 * m002 - a02 * m000\r\n    val b02 = a00 * m003 - a03 * m000\r\n    val b03 = a01 * m002 - a02 * m001\r\n    val b04 = a01 * m003 - a03 * m001\r\n    val b05 = a02 * m003 - a03 * m002\r\n    val b06 = m100 * m201 - m101 * m200\r\n    val b07 = m100 * m202 - m102 * m200\r\n    val b08 = m100 * m203 - m103 * m200\r\n    val b09 = m101 * m202 - m102 * m201\r\n    val m010 = m101 * m203 - m103 * m201\r\n    val m011 = m102 * m203 - m103 * m202\r\n    val det =\r\n        (b00 * m011 - b01 * m010 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06)\r\n    if (det == 0.0f) {\r\n        return this\r\n    }\r\n    val invDet = 1.0f / det\r\n    storage[0] = (m001 * m011 - m002 * m010 + m003 * b09) * invDet\r\n    storage[1] = (-a01 * m011 + a02 * m010 - a03 * b09) * invDet\r\n    storage[2] = (m201 * b05 - m202 * b04 + m203 * b03) * invDet\r\n    storage[3] = (-m101 * b05 + m102 * b04 - m103 * b03) * invDet\r\n    storage[4] = (-m000 * m011 + m002 * b08 - m003 * b07) * invDet\r\n    storage[5] = (a00 * m011 - a02 * b08 + a03 * b07) * invDet\r\n    storage[6] = (-m200 * b05 + m202 * b02 - m203 * b01) * invDet\r\n    storage[7] = (m100 * b05 - m102 * b02 + m103 * b01) * invDet\r\n    storage[8] = (m000 * m010 - m001 * b08 + m003 * b06) * invDet\r\n    storage[9] = (-a00 * m010 + a01 * b08 - a03 * b06) * invDet\r\n    storage[10] = (m200 * b04 - m201 * b02 + m203 * b00) * invDet\r\n    storage[11] = (-m100 * b04 + m101 * b02 - m103 * b00) * invDet\r\n    storage[12] = (-m000 * b09 + m001 * b07 - m002 * b06) * invDet\r\n    storage[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet\r\n    storage[14] = (-m200 * b03 + m201 * b01 - m202 * b00) * invDet\r\n    storage[15] = (m100 * b03 - m101 * b01 + m102 * b00) * invDet\r\n    return this\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Mat4{\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Mat4 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Mat4) {\r\n    set(value)\r\n  }  \r\n\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniformMatrix4fv(uniformLocation, false, storage)\r\n  }\r\n\r\n}\r\n",null,"package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\n\r\n\r\nclass Mat4Array(backingStorage: Float32Array?, startIndex: Int = 0, endIndex: Int = 0) : UniformFloat {\r\n\r\n  constructor(size : Int) : this(null, size, size) {}\r\n\r\n  override val storage = backingStorage?.subarray(startIndex*16, endIndex*16)?:Float32Array(startIndex*16)\r\n\r\n  override fun set(vararg values : Float) : Mat4Array {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = values.getOrNull(i%16) ?: if(i%16%5==0) 1.0f else 0.0f\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator fun get(i : Int) : Mat4{\r\n    return Mat4(storage, i*16)\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Mat4Array{\r\n    provider.register(property.name + \"[0]\", this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Mat4Array {\r\n    return this\r\n  }\r\n  \r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Mat4Array) {\r\n    set(value)\r\n  }    \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniformMatrix4fv(uniformLocation, false, storage)\r\n  }\r\n\r\n}\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport org.khronos.webgl.WebGLProgram\r\nimport kotlin.reflect.KClass\r\n\r\nval WebGLRenderingContext.Companion.UNSIGNED_INT_SAMPLER_2D : Int get() = 0x8DD2\r\nval WebGLRenderingContext.Companion.INT_SAMPLER_2D : Int get() = 0x8DCA\r\nval WebGLRenderingContext.Companion.SAMPLER_2D_SHADOW : Int get() = 0x8B62\r\nval WebGLRenderingContext.Companion.UNSIGNED_INT_SAMPLER_CUBE : Int get() = 0x8DD4\r\nval WebGLRenderingContext.Companion.INT_SAMPLER_CUBE : Int get() = 0x8DCC\r\nval WebGLRenderingContext.Companion.SAMPLER_CUBE_SHADOW : Int get() = 0x8DC5\r\nval WebGLRenderingContext.Companion.UNSIGNED_INT_SAMPLER_3D : Int get() = 0x8DD3\r\nval WebGLRenderingContext.Companion.INT_SAMPLER_3D : Int get() = 0x8DCB\r\nval WebGLRenderingContext.Companion.SAMPLER_3D : Int get() = 0x8B5F\r\nval WebGLRenderingContext.Companion.UNSIGNED_INT_SAMPLER_2D_ARRAY : Int get() = 0x8DD7\r\nval WebGLRenderingContext.Companion.INT_SAMPLER_2D_ARRAY : Int get() = 0x8DCF\r\nval WebGLRenderingContext.Companion.SAMPLER_2D_ARRAY_SHADOW : Int get() = 0x8DC4\r\nval WebGLRenderingContext.Companion.SAMPLER_2D_ARRAY : Int get() = 0x8DC1\r\n\r\nclass UniformDescriptor(val name:String, val type: Int, val size: Int, val location: WebGLUniformLocation){\r\n}\r\n\r\nclass ProgramReflection(val gl : WebGLRenderingContext, val glProgram : WebGLProgram) : Drawable() {\r\n\r\n  val uniformDescriptors = HashMap<String, ArrayList<UniformDescriptor> >()\r\n\r\n  init{\r\n  \t// for all uniforms used in glProgram\r\n  \tval nUniforms = gl.getProgramParameter(glProgram, WebGLRenderingContext.ACTIVE_UNIFORMS) as Int\r\n  \tfor(i in 0 until nUniforms){ \r\n  \t  val glUniform = gl.getActiveUniform(glProgram, i) ?: throw Error(\"Uniform listed by gl.getProgramParameter but not found by gl.getActiveUniform.\")\r\n  \t  // separate struct name (if exists) and unqualified uniform name\r\n  \t  val nameParts = glUniform.name.split(\".\")\r\n  \t  val uniformName = nameParts.lastOrNull() ?: continue\r\n  \t  val structName = nameParts.dropLast(1).lastOrNull() ?: continue\r\n\r\n      uniformDescriptors[structName] = this.uniformDescriptors[structName] ?: ArrayList<UniformDescriptor>()\r\n      uniformDescriptors[structName]?.add( UniformDescriptor(\r\n        name = uniformName,\r\n        type = glUniform.type,\r\n        size = glUniform.size,\r\n        location = gl.getUniformLocation(glProgram, glUniform.name)?: throw Error(\"No location for ${glUniform.name}\")\r\n      )) ?: throw Error(\"Struct name ${structName} missing from uniform descriptors.\")\r\n    }\r\n  }\r\n  \r\n  override fun gatherUniforms(target : UniformProvider){\r\n    for(structName in target.glslStructNames) {\r\n      // Skip GLSL struct provided by the target if the program does not need it.\r\n      val descList = uniformDescriptors[structName] ?: continue\r\n\r\n      for(uniformDesc in descList) {\r\n        val reflectionVariable = ProgramReflection.makeVar(uniformDesc.type, uniformDesc.size, uniformDesc.name)\r\n\r\n        if(target.uniforms.containsKey(uniformDesc.name)){ // if reflection property already exists, check compatibility\r\n          val existingVariable = target.uniforms[uniformDesc.name] ?: throw Error(\"\"\"Key \"${uniformDesc.name}\" exists in uniforms, but its value is null.\"\"\")\r\n          if(glslTypesRepresented[existingVariable::class] != glslTypesRepresented[reflectionVariable::class] ||\r\n            existingVariable.getStorageSize() != reflectionVariable.getStorageSize()){\r\n            throw Error(\"Trying to reflect uniform ${uniformDesc.name} as a ${reflectionVariable::class.simpleName} with element count ${reflectionVariable.getStorageSize()}, but it already exists in the target object as a ${(existingVariable::class.simpleName)} with element count ${existingVariable.getStorageSize()}.\")\r\n          }\r\n        } else {\r\n          target.uniforms[uniformDesc.name] = reflectionVariable\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Sets values of all uniforms from the properties of the given objects.\r\n   * @param {...UniformProvider} uniformProviders - Objects with properties matching the names and the types of the uniforms to be set. Their glslStructNames property must list uniform struct names they are responsible for setting.\r\n   */\r\n  override fun draw(vararg uniformProviders : UniformProvider) { \r\n    gl.useProgram(glProgram)\r\n    var textureUnitCount = 0\r\n\r\n    for(provider in uniformProviders){\r\n      for(structName in provider.glslStructNames) {\r\n        val descList = uniformDescriptors[structName] ?: continue\r\n        for(uniformDesc in descList) {\r\n          provider[uniformDesc.name]?.commit(gl, uniformDesc.location, textureUnitCount) ?: throw Error(\"Uniform ${uniformDesc.name} in struct ${structName} from list ${descList}\")\r\n          //  keep track of texture units used\r\n          if( ProgramReflection.isSampler(uniformDesc.type) ){ \r\n            textureUnitCount += uniformDesc.size\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  companion object {\r\n    /**\r\n     * @method makeVar\r\n     * @memberof ProgramReflection\r\n     * @static \r\n     * @description Returns a new reflection variable based on a numerical WebGL type ID.\r\n     * @param {Number} type - The numeric type of the uniform, i.e. a value of a type identifier property in the rendering context.\r\n     * @param {Number} arraySize - The number of elements in the uniform, if it is an array. Otherwise, it must be 1.\r\n     * @return {Vec1 | Vec1Array | Vec2 | Vec2Array | Vec3 | Vec3Array | Vec4 | Vec4Array | Mat4 | Mat4Array | Sampler2D | Sampler2DArray | SamplerCube | SamplerCubeArray | Sampler3D | Sampler3DArray | Sampler2DArrayTexture | Sampler2DArrayTextureArray} The new reflection object.\r\n     */  \r\n    fun makeVar(type : Int, arraySize : Int, debugName : String) : Uniform {\r\n      if(arraySize == 1) {\r\n        when(type) {\r\n          WebGLRenderingContext.INT ->           return IVec1()\r\n          WebGLRenderingContext.UNSIGNED_INT ->  return IVec1()\r\n          WebGLRenderingContext.INT_VEC2 ->      return IVec2()\r\n          WebGLRenderingContext.INT_VEC3 ->      return IVec3()\r\n          WebGLRenderingContext.INT_VEC4 ->      return IVec4()\r\n          WebGLRenderingContext.FLOAT ->         return Vec1()\r\n          WebGLRenderingContext.FLOAT_VEC2 ->    return Vec2()\r\n          WebGLRenderingContext.FLOAT_VEC3 ->    return Vec3()\r\n          WebGLRenderingContext.FLOAT_VEC4 ->    return Vec4()\r\n          WebGLRenderingContext.FLOAT_MAT4 ->    return Mat4()\r\n          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_2D , \r\n//          WebGLRenderingContext.INT_SAMPLER_2D ,\r\n//          WebGLRenderingContext.SAMPLER_2D_SHADOW ,\r\n          WebGLRenderingContext.SAMPLER_2D ->    return Sampler2D(debugName)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_CUBE ,\r\n//          WebGLRenderingContext.INT_SAMPLER_CUBE ,\r\n//          WebGLRenderingContext.SAMPLER_CUBE_SHADOW ,\r\n          WebGLRenderingContext.SAMPLER_CUBE ->  return SamplerCube(debugName)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_3D ,\r\n//          WebGLRenderingContext.INT_SAMPLER_3D ,\r\n          WebGLRenderingContext.SAMPLER_3D ->    return Sampler3D(debugName)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_2D_ARRAY ,\r\n//          WebGLRenderingContext.INT_SAMPLER_2D_ARRAY ,\r\n//          WebGLRenderingContext.SAMPLER_2D_SHADOW_ARRAY ,\r\n//          WebGLRenderingContext.SAMPLER_2D_ARRAY ->    return Sampler2DArrayTexture()\r\n        }\r\n      } else {\r\n        when(type) {\r\n          WebGLRenderingContext.INT ->           return IVec1Array(arraySize)\r\n          WebGLRenderingContext.UNSIGNED_INT ->  return IVec1Array(arraySize)          \r\n          WebGLRenderingContext.FLOAT ->         return Vec1Array(arraySize)\r\n          WebGLRenderingContext.FLOAT_VEC2 ->    return Vec2Array(arraySize)\r\n          WebGLRenderingContext.FLOAT_VEC3 ->    return Vec3Array(arraySize)\r\n          WebGLRenderingContext.FLOAT_VEC4 ->    return Vec4Array(arraySize)\r\n          WebGLRenderingContext.FLOAT_MAT4 ->    return Mat4Array(arraySize)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_2D ,\r\n//          WebGLRenderingContext.INT_SAMPLER_2D ,\r\n//          WebGLRenderingContext.SAMPLER_2D_SHADOW ,\r\n//          WebGLRenderingContext.SAMPLER_2D ->    return Sampler2DArray(arraySize)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_CUBE ,\r\n//          WebGLRenderingContext.INT_SAMPLER_CUBE ,\r\n//          WebGLRenderingContext.SAMPLER_CUBE_SHADOW ,\r\n//          WebGLRenderingContext.SAMPLER_CUBE ->  return SamplerCubeArray(arraySize)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_3D , \r\n//          WebGLRenderingContext.INT_SAMPLER_3D ,\r\n//          WebGLRenderingContext.SAMPLER_3D ->    return Sampler3DArray(arraySize)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_2D_ARRAY ,\r\n//          WebGLRenderingContext.INT_SAMPLER_2D_ARRAY ,\r\n//          WebGLRenderingContext.SAMPLER_2D_ARRAY_SHADOW ,\r\n//          WebGLRenderingContext.SAMPLER_2D_ARRAY ->    return Sampler2DArrayTextureArray(arraySize)\r\n        }\r\n      }\r\n      throw Error(\"Unhandled uniform variable of type ID ${type}.\")\r\n    }\r\n\r\n\r\n    /**\r\n     * @method isSampler\r\n     * @memberof ProgramReflection\r\n     * @static \r\n     * @description Returns true if type is a numerical WebGL type ID of a sampler uniform.\r\n     * @param {WebGL2RenderingContext} gl - The rendering context.\r\n     * @param {Number} type - The numeric type of the uniform, i.e. a value of a type identifier property in the rendering context.\r\n     */\r\n    fun isSampler(type : Int) : Boolean {\r\n      return  type == WebGLRenderingContext.SAMPLER_2D ||\r\n              type == WebGLRenderingContext.SAMPLER_3D ||\r\n              type == WebGLRenderingContext.SAMPLER_CUBE ||\r\n              type == WebGLRenderingContext.SAMPLER_2D_SHADOW ||\r\n              type == WebGLRenderingContext.SAMPLER_2D_ARRAY ||\r\n              type == WebGLRenderingContext.SAMPLER_2D_ARRAY_SHADOW ||\r\n              type == WebGLRenderingContext.SAMPLER_CUBE_SHADOW ||\r\n              type == WebGLRenderingContext.INT_SAMPLER_2D ||\r\n              type == WebGLRenderingContext.INT_SAMPLER_3D ||\r\n              type == WebGLRenderingContext.INT_SAMPLER_CUBE ||\r\n              type == WebGLRenderingContext.INT_SAMPLER_2D_ARRAY ||\r\n              type == WebGLRenderingContext.UNSIGNED_INT_SAMPLER_2D ||\r\n              type == WebGLRenderingContext.UNSIGNED_INT_SAMPLER_3D ||\r\n              type == WebGLRenderingContext.UNSIGNED_INT_SAMPLER_CUBE ||\r\n              type == WebGLRenderingContext.UNSIGNED_INT_SAMPLER_2D_ARRAY\r\n    }\r\n\r\n    val glslTypesRepresented = mapOf<KClass<*>, Int>(\r\n      Vec1::class to WebGLRenderingContext.FLOAT,\r\n      Vec2::class to WebGLRenderingContext.FLOAT_VEC2,\r\n      Vec3::class to WebGLRenderingContext.FLOAT_VEC3,\r\n      Vec4::class to WebGLRenderingContext.FLOAT_VEC4,\r\n      Vec1Array::class to WebGLRenderingContext.FLOAT,\r\n      Vec2Array::class to WebGLRenderingContext.FLOAT_VEC2,\r\n      Vec3Array::class to WebGLRenderingContext.FLOAT_VEC3,\r\n      Vec4Array::class to WebGLRenderingContext.FLOAT_VEC4,      \r\n      Mat4::class to WebGLRenderingContext.FLOAT_MAT4,\r\n      IVec1::class to WebGLRenderingContext.INT,\r\n      IVec2::class to WebGLRenderingContext.INT_VEC2,\r\n      IVec3::class to WebGLRenderingContext.INT_VEC3,\r\n      IVec4::class to WebGLRenderingContext.INT_VEC4,\r\n      Sampler2D::class to WebGLRenderingContext.SAMPLER_2D,\r\n      Sampler3D::class to WebGLRenderingContext.SAMPLER_2D,\r\n      SamplerCube::class to WebGLRenderingContext.SAMPLER_CUBE,\r\n\r\n//      Quat::class to WebGLRenderingContext.VEC4,\r\n//      QuadraticMat4::class to WebGLRenderingContext.MAT4      \r\n    )\r\n  }\r\n}",null,"package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport org.khronos.webgl.WebGLTexture\r\nimport kotlin.reflect.KProperty\r\n\r\nclass Sampler2D(var debugName : String = \"\") : UniformSampler {\r\n\r\n  override val storage = Int32Array(1)\r\n  override val glTextures = Array<WebGLTexture?>(1) {null}\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Sampler2D {\r\n    provider.register(property.name, this)\r\n    debugName = property.name\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Sampler2D {\r\n    return this\r\n  }\r\n  \r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Sampler2D) {\r\n    set(value)\r\n  }  \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    storage[0] = samplerIndex\r\n    if(glTextures[0] != null) {\r\n      gl.uniform1iv(uniformLocation, storage)\r\n      gl.activeTexture(WebGLRenderingContext.TEXTURE0 + samplerIndex)\r\n      gl.bindTexture(WebGLRenderingContext.TEXTURE_2D, glTextures[0])\r\n    } else {\r\n      console.warn(\"No texture bound to Sampler2D reflecting uniform '${debugName}'.\")\r\n    }\r\n  }\r\n}","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport org.khronos.webgl.WebGLTexture\r\nimport kotlin.reflect.KProperty\r\n\r\nval WebGLRenderingContext.Companion.TEXTURE_3D : Int get() = 0x806F\r\n\r\nclass Sampler3D(var debugName : String = \"\") : UniformSampler {\r\n\r\n  override val storage = Int32Array(1)\r\n  override val glTextures = Array<WebGLTexture?>(1) {null}\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Sampler3D {\r\n    provider.register(property.name, this)\r\n    debugName = property.name    \r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Sampler3D {\r\n    return this\r\n  }\r\n  \r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Sampler3D) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    storage[0] = samplerIndex\r\n    if(glTextures[0] != null) {\r\n      gl.uniform1iv(uniformLocation, storage)\r\n      gl.activeTexture(WebGLRenderingContext.TEXTURE0 + samplerIndex)\r\n      gl.bindTexture(WebGLRenderingContext.TEXTURE_3D, glTextures[0])\r\n    } else {\r\n      console.warn(\"No texture bound to Sampler3D reflecting uniform '${debugName}'.\")\r\n    }\r\n  }\r\n}","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport org.khronos.webgl.WebGLTexture\r\nimport kotlin.reflect.KProperty\r\n\r\nclass SamplerCube(var debugName : String = \"\") : UniformSampler {\r\n\r\n  override val storage = Int32Array(1)\r\n  override val glTextures = Array<WebGLTexture?>(1) {null}\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : SamplerCube {\r\n    provider.register(property.name, this)\r\n    debugName = property.name\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): SamplerCube {\r\n    return this\r\n  }\r\n  \r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: SamplerCube) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    storage[0] = samplerIndex\r\n    if(glTextures[0] != null) {\r\n      gl.uniform1iv(uniformLocation, storage)\r\n      gl.activeTexture(WebGLRenderingContext.TEXTURE0 + samplerIndex)\r\n      gl.bindTexture(WebGLRenderingContext.TEXTURE_CUBE_MAP, glTextures[0])\r\n    } else {\r\n      console.warn(\"No texture bound to Sampler2D reflecting uniform '${debugName}'.\")\r\n    }\r\n  }\r\n}","package vision.gears.webglmath\r\n\r\nopen class UniformProvider(vararg val glslStructNames : String) : Drawable() {\r\n  internal val uniforms = HashMap<String, Uniform>()\r\n  fun register(uniformName : String, uniform : Uniform){\r\n    uniforms[uniformName] = uniform\r\n  }\r\n  operator fun get(name : String): Uniform? {\r\n    if(!uniforms.containsKey(name)){\r\n      console.error(\"\"\"WARNING: Attempt to access unknown or non-active uniform '${name}'.\"\"\" )         \r\n    }\r\n    return uniforms[name] }\r\n  operator fun set(name : String, uniform : Uniform ) { (uniforms[name] ?: return).set(uniform) }\r\n  operator fun set(name : String, value : Float ) { (uniforms[name] ?: return).set(value) }\r\n\r\n  val components = ArrayList<Drawable>()\r\n\r\n  fun addComponentsAndGatherUniforms(vararg children : Drawable){\r\n    components.addAll(children)\r\n    gatherUniforms(this)\r\n  }\r\n\r\n  override fun gatherUniforms(target : UniformProvider){\r\n    components.forEach {\r\n      it.gatherUniforms(target)\r\n    }\r\n  }\r\n\r\n  override fun draw(vararg uniformProviders : UniformProvider){\r\n    components.forEach {\r\n      it.draw(this, *uniformProviders)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recursively calls drawWithOverrides on subcomponents, but if there is\r\n   * an object of matching type in overrides, drawWithOverrides is called\r\n   * on it instead of the subcomponent.\r\n   */\r\n  override fun drawWithOverrides(overrides : Map<String, UniformProvider>, vararg uniformProviders : UniformProvider){\r\n    components.forEach{\r\n      (overrides[it::class.simpleName]?:it).drawWithOverrides(\r\n        overrides,\r\n        this,\r\n        *uniformProviders\r\n        )\r\n    }\r\n  }    \r\n\r\n  fun using(vararg overriders : UniformProvider) : Drawable {\r\n    val overrideMap = overriders.map{(it::class.simpleName?:\"<no class name>\") to it}.toMap()\r\n    return object : Drawable() {\r\n      override fun draw(vararg uniformProviders : UniformProvider){\r\n        this@UniformProvider.drawWithOverrides(overrideMap, *uniformProviders)\r\n      }\r\n      override fun drawWithOverrides(overrides : Map<String, UniformProvider>, vararg uniformProviders : UniformProvider){\r\n        val allOverrides : MutableMap<String, UniformProvider> = overrideMap.toMutableMap()\r\n        overrides.forEach{ (key : String, value : UniformProvider) -> allOverrides[key] = value } \r\n        this@UniformProvider.drawWithOverrides(allOverrides, *uniformProviders)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\nclass Vec1(backingStorage: Float32Array?, offset: Int = 0) : UniformFloat {\r\n\r\n  constructor(u: Float = 0.0f) : this(null, 0){\r\n    storage[0] = u\r\n  }\r\n  constructor(other : Vec1) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Float32Array = backingStorage?.subarray(offset, offset+1)?:Float32Array(1)\r\n  inline var x : Float\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline val xx : Vec2\r\n    get() = Vec2(storage[0], storage[0])\r\n  inline val xxx : Vec3\r\n    get() = Vec3(storage[0], storage[0], storage[0])\r\n  inline val xxxx : Vec4\r\n    get() = Vec4(storage[0], storage[0], storage[0], storage[0])        \r\n\r\n  inline fun clone() : Vec1 {\r\n    return Vec1(this)\r\n  }\r\n\r\n  override fun set(vararg values : Float) : Vec1 {\r\n    storage[0] = values.getOrElse(0) {0.0f}\r\n    return this \r\n  }\r\n\r\n  companion object {\r\n    val zeros = Vec1()\r\n    val ones = Vec1(1.0f) \r\n\r\n    inline fun makeRandom(minVal: Vec1 = Vec1.zeros, maxVal: Vec1 = Vec1.ones) : Vec1 {\r\n      return Vec1(\r\n          Random.nextFloat() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0]                    \r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Float = 0.0f, maxVal: Float = 1.0f): Vec1 {\r\n      return Vec1.makeRandom(Vec1(minVal), Vec1(maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun randomize(minVal: Vec1 = Vec1.zeros, maxVal: Vec1 = Vec1.ones){\r\n    set(Vec1.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun randomize(minVal: Float = 0.0f, maxVal: Float = 1.0f){\r\n    randomize(Vec1(minVal), Vec1(maxVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: Vec1 = Vec1.zeros, maxVal: Vec1 = Vec1.ones) : Vec1 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryPlus() : Vec1 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : Vec1 {\r\n    return Vec1(-storage[0])\r\n  }\r\n\r\n  operator inline fun times(scalar : Float) : Vec1 {\r\n    return Vec1(\r\n      storage[0] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Float) : Vec1 {\r\n    return Vec1(\r\n      storage[0] / scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Float) {\r\n    storage[0] *= scalar\r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Float) {\r\n    storage[0] /= scalar\r\n  }    \r\n\r\n  operator inline fun plusAssign(other : Vec1) {\r\n    storage[0] += other.storage[0]\r\n  }\r\n\r\n  operator inline fun plus(other : Vec1) : Vec1 {\r\n    return Vec1(\r\n      storage[0] + other.storage[0]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : Vec1) {\r\n    storage[0] -= other.storage[0]\r\n  }\r\n\r\n  operator inline fun minus(other : Vec1) : Vec1 {\r\n    return Vec1(\r\n      storage[0] - other.storage[0]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : Vec1) {\r\n    storage[0] *= other.storage[0]\r\n  }\r\n\r\n  operator inline fun times(other : Vec1) : Vec1 {\r\n    return Vec1(\r\n      storage[0] * other.storage[0]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : Vec1) {\r\n    storage[0] /= other.storage[0]\r\n  }\r\n\r\n  operator inline fun div(other : Vec1) : Vec1 {\r\n    return Vec1(\r\n      storage[0] / other.storage[0]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Float {\r\n    return storage[0] * storage[0]\r\n  }\r\n\r\n  inline fun length() : Float {\r\n    return storage[0]\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec1 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec1 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec1) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform1fv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.times(v: Vec1) = Vec1(this * v.storage[0])\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.div(v: Vec1) = Vec1(this / v.storage[0])\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\nimport kotlin.math.sqrt\r\n\r\nclass Vec1Array(backingStorage: Float32Array?, startIndex: Int = 0, endIndex: Int = 0) : VecArray() {\r\n\r\n  constructor(size : Int) : this(null, size, size) {}\r\n\r\n  override val storage = backingStorage?.subarray(startIndex, endIndex)?:Float32Array(startIndex)\r\n\r\n  override fun set(vararg values : Float) : Vec1Array {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = values.getOrNull(i) ?: 0.0f\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator fun get(i : Int) : Vec1{\r\n    return Vec1(storage, i)\r\n  }\r\n\r\n  fun subarray(begin : Int, end : Int) : Vec1Array {\r\n    return Vec1Array(storage, begin, end)\r\n  }\r\n\r\n  fun setDot(b : Vec2Array, c : Vec2Array) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = b.storage[i*2] * c.storage[i*2] + b.storage[i*2+1] * c.storage[i*2+1]\r\n    } \r\n  }\r\n  fun setDot(b : Vec3Array, c : Vec3Array) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = b.storage[i*3] * c.storage[i*3] + b.storage[i*3+1] * c.storage[i*3+1] + b.storage[i*3+2] * c.storage[i*3+2]\r\n    }\r\n  }\r\n  fun setDot(b : Vec4Array, c : Vec4Array) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = b.storage[i*4] * c.storage[i*4] + b.storage[i*4+1] * c.storage[i*4+1] + b.storage[i*4+2] * c.storage[i*4+2] + b.storage[i*4+3] * c.storage[i*4+3]\r\n    }\r\n  }  \r\n  fun setDot(b : Vec2Array, c : Vec2) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = b.storage[i*2] * c.storage[0] + b.storage[i*2+1] * c.storage[1]\r\n    }\r\n  }\r\n  fun setDot(b : Vec3Array, c : Vec3) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = b.storage[i*3] * c.storage[0] + b.storage[i*3+1] * c.storage[1] + b.storage[i*3+2] * c.storage[2]\r\n    }\r\n  }\r\n  fun setDot(b : Vec4Array, c : Vec4) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = b.storage[i*4] * c.storage[0] + b.storage[i*4+1] * c.storage[1] + b.storage[i*4+2] * c.storage[2] + b.storage[i*4+3] * c.storage[3]\r\n    }\r\n  }\r\n  fun setLength(b : Vec2Array) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = sqrt(b.storage[i*2] * b.storage[i*2] + b.storage[i*2+1] * b.storage[i*2+1])\r\n    }\r\n  }\r\n  fun setLength(b : Vec3Array) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = sqrt(b.storage[i*3] * b.storage[i*3] + b.storage[i*3+1] * b.storage[i*3+1] + b.storage[i*3+2] * b.storage[i*3+2])\r\n    }\r\n  }\r\n  fun setLength(b : Vec4Array) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = sqrt(b.storage[i*4] * b.storage[i*4] + b.storage[i*4+1] * b.storage[i*4+1] + b.storage[i*4+2] * b.storage[i*4+2] + b.storage[i*4+3] * b.storage[i*4+3])\r\n    }\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec1Array {\r\n    provider.register(property.name + \"[0]\", this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec1Array {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec1Array) {\r\n    set(value)\r\n  }  \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform1fv(uniformLocation, storage)\r\n  }  \r\n} ","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.sqrt\r\nimport kotlinx.serialization.*\r\nimport kotlinx.serialization.descriptors.*\r\nimport kotlinx.serialization.json.*\r\nimport kotlinx.serialization.encoding.*\r\n\r\nobject Vec2Serializer : KSerializer<Vec2> {\r\n  @kotlinx.serialization.InternalSerializationApi\r\n  override val descriptor: SerialDescriptor =\r\n    buildSerialDescriptor(\"vision.gears.Vec2\", StructureKind.LIST)\r\n  override fun deserialize(decoder: Decoder): Vec2 {\r\n    val input = decoder as? JsonDecoder ?: throw SerializationException(\"Expected Json Input\")\r\n    val array = input.decodeJsonElement() as? JsonArray ?: throw SerializationException(\"Expected JsonArray\")\r\n    return Vec2(\r\n      (array[0] as? JsonPrimitive)?.float ?: 0.0f,\r\n      (array[1] as? JsonPrimitive)?.float ?: 0.0f \r\n    )\r\n    //return Vec2(decoder.decodeSerializableValue(FloatArraySerializer()))\r\n  }\r\n  override fun serialize(encoder: Encoder, value : Vec2) {\r\n    val output = encoder as? JsonEncoder ?: throw SerializationException(\"This class can be saved only by Json\")\r\n    val array = buildJsonArray {\r\n      add(value.x)\r\n      add(value.y)\r\n    }\r\n    /*array.encodeFloatElement(descriptor, 0, value.x)\r\n    array.encodeFloatElement(descriptor, 1, value.y)*/\r\n    output.encodeJsonElement(array)\r\n  }      \r\n}\r\n\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\n@Serializable(with = Vec2Serializer::class)\r\nclass Vec2(backingStorage: Float32Array?, offset: Int = 0) : UniformFloat {\r\n\r\n  constructor(u: Float = 0.0f, v: Float = 0.0f) : this(null, 0){\r\n    storage[0] = u\r\n    storage[1] = v\r\n  }\r\n  constructor(other : Vec1, v: Float = 0.0f) : this(other.storage[0], v ){}\r\n  constructor(other : Vec2) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Float32Array = backingStorage?.subarray(offset, offset+2)?:Float32Array(2)\r\n  inline var x : Float\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline var y : Float\r\n    get() = storage[1]\r\n    set(value) { storage[1] = value }\r\n  inline val xy0 : Vec3\r\n    get() = Vec3(storage[0], storage[1], 0.0f)\r\n  inline val xy00 : Vec4\r\n    get() = Vec4(storage[0], storage[1], 0.0f, 0.0f)    \r\n  inline val xy01 : Vec4\r\n    get() = Vec4(storage[0], storage[1], 0.0f, 1.0f)\r\n\r\n  inline fun clone() : Vec2 {\r\n    return Vec2(this)\r\n  }\r\n\r\n  override fun set(vararg values : Float) : Vec2 {\r\n    storage[0] = values.getOrElse(0) {0.0f}\r\n    storage[1] = values.getOrElse(1) {0.0f}\r\n    return this \r\n  }\r\n\r\n  companion object {\r\n    val zeros = Vec2()\r\n    val ones = Vec2(1.0f, 1.0f) \r\n\r\n    inline fun makeRandom(minVal: Vec2 = Vec2.zeros, maxVal: Vec2 = Vec2.ones) : Vec2 {\r\n      return Vec2(\r\n          Random.nextFloat() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0],\r\n          Random.nextFloat() * (maxVal.storage[1] - minVal.storage[1]) + minVal.storage[1]\r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Float = 0.0f, maxVal: Float = 1.0f) : Vec2 {\r\n      return Vec2.makeRandom(Vec2(minVal, minVal), Vec2(maxVal, maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun randomize(minVal: Vec2 = Vec2.zeros, maxVal: Vec2 = Vec2.ones){\r\n    set(Vec2.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun randomize(minVal: Float = 0.0f, maxVal: Float = 1.0f){\r\n    randomize(Vec2(minVal, minVal), Vec2(maxVal, maxVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: Vec2 = Vec2.zeros, maxVal: Vec2 = Vec2.ones) : Vec2 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[1] < minVal.storage[1]){\r\n      storage[1] = minVal.storage[1]\r\n    }\r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    if(storage[1] > maxVal.storage[1]){\r\n      storage[1] = maxVal.storage[1]\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryPlus() : Vec2 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : Vec2 {\r\n    return Vec2(-storage[0], -storage[1])\r\n  }\r\n\r\n  operator inline fun times(scalar : Float) : Vec2 {\r\n    return Vec2(\r\n      storage[0] * scalar,\r\n      storage[1] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Float) : Vec2 {\r\n    return Vec2(\r\n      storage[0] / scalar,\r\n      storage[1] / scalar      \r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Float) {\r\n    storage[0] *= scalar\r\n    storage[1] *= scalar\r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Float) {\r\n    storage[0] /= scalar\r\n    storage[1] /= scalar\r\n  }\r\n\r\n  operator inline fun plusAssign(other : Vec2) {\r\n    storage[0] += other.storage[0]\r\n    storage[1] += other.storage[1]\r\n  }\r\n\r\n  operator inline fun plus(other : Vec2) : Vec2 {\r\n    return Vec2(\r\n      storage[0] + other.storage[0],\r\n      storage[1] + other.storage[1]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : Vec2) {\r\n    storage[0] -= other.storage[0]\r\n    storage[1] -= other.storage[1]\r\n  }\r\n\r\n  operator inline fun minus(other : Vec2) : Vec2 {\r\n    return Vec2(\r\n      storage[0] - other.storage[0],\r\n      storage[1] - other.storage[1]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : Vec2) {\r\n    storage[0] *= other.storage[0]\r\n    storage[1] *= other.storage[1]\r\n  }\r\n\r\n  operator inline fun times(other : Vec2) : Vec2 {\r\n    return Vec2(\r\n      storage[0] * other.storage[0],\r\n      storage[1] * other.storage[1]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : Vec2) {\r\n    storage[0] /= other.storage[0]\r\n    storage[1] /= other.storage[1]\r\n  }\r\n\r\n  operator inline fun div(other : Vec2) : Vec2 {\r\n    return Vec2(\r\n      storage[0] / other.storage[0],\r\n      storage[1] / other.storage[1]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Float {\r\n    return storage[0] * storage[0] + storage[1] * storage[1]\r\n  }\r\n\r\n  inline fun length() : Float {\r\n    return sqrt(lengthSquared())\r\n  }\r\n\r\n  inline fun normalize() : Vec2 {\r\n    val l = this.length()\r\n    storage[0] /= l\r\n    storage[1] /= l\r\n    return this\r\n  }\r\n\r\n  infix inline fun dot(other : Vec2) : Float {\r\n    return (\r\n     storage[0] * other.storage[0] +\r\n     storage[1] * other.storage[1] )\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec2 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec2 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec2) {\r\n    set(value)\r\n  }\r\n  \r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform2fv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.times(v: Vec2) = Vec2(this * v.storage[0], this * v.storage[1])\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.div(v: Vec2) = Vec2(this / v.storage[0], this / v.storage[1])\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\nimport kotlin.math.sqrt\r\nimport kotlin.math.cos\r\nimport kotlin.math.sin\r\n\r\nclass Vec2Array(backingStorage: Float32Array?, startIndex: Int = 0, endIndex: Int = 0) : VecArray() {\r\n\r\n  constructor(size : Int) : this(null, size, size) {}\r\n\r\n  override val storage = backingStorage?.subarray(startIndex*2, endIndex*2)?:Float32Array(startIndex*2)\r\n\r\n  override fun set(vararg values : Float) : Vec2Array {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = values.getOrNull(i%2) ?: 0.0f\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator fun get(i : Int) : Vec2{\r\n    return Vec2(storage, i*2)\r\n  }\r\n\r\n  fun subarray(begin : Int, end : Int) : Vec2Array {\r\n    return Vec2Array(storage, begin, end)\r\n  }\r\n\r\n  fun setNormalized(b : Vec2Array) {\r\n    for(i in 0 until storage.length step 2) {\r\n      val l2 =\r\n        b.storage[i  ] * b.storage[i  ] +\r\n        b.storage[i+1] * b.storage[i+1]\r\n      val linv = 1 / sqrt(l2)\r\n      storage[i  ] = b.storage[i  ] * linv\r\n      storage[i+1] = b.storage[i+1] * linv\r\n    }\r\n  }\r\n\r\n  fun setAffineTransformed(v : Vec2Array, m : Mat4) {  \r\n    for(i in 0 until storage.length step 2) {\r\n      storage[i+0] =\r\n         v.storage[i+0] * m.storage[ 0] +\r\n         v.storage[i+1] * m.storage[ 1] +\r\n                          m.storage[ 3]\r\n      storage[i+1] =\r\n         v.storage[i+0] * m.storage[ 4] +\r\n         v.storage[i+1] * m.storage[ 5] +\r\n                          m.storage[ 7]\r\n    }\r\n  }\r\n\r\n  fun setAffineNormalTransformed(v : Vec2Array, m : Mat4) {  \r\n    for(i in 0 until storage.length step 2) {\r\n      storage[i+0] =\r\n         v.storage[i+0] * m.storage[ 0] +\r\n         v.storage[i+1] * m.storage[ 1]\r\n      storage[i+1] =\r\n         v.storage[i+0] * m.storage[ 4] +\r\n         v.storage[i+1] * m.storage[ 5]\r\n    }\r\n  }  \r\n\r\n  fun setCosSin(alphas : Vec1Array){\r\n    for(i in 0 until storage.length step 2) {\r\n      this.storage[i+0] = cos(alphas.storage[i/2])\r\n      this.storage[i+1] = sin(alphas.storage[i/2])\r\n    }\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec2Array {\r\n    provider.register(property.name + \"[0]\", this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec2Array {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec2Array) {\r\n    set(value)\r\n  }  \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform4fv(uniformLocation, storage)\r\n  }  \r\n} ","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.sqrt\r\nimport kotlinx.serialization.*\r\nimport kotlinx.serialization.descriptors.*\r\nimport kotlinx.serialization.json.*\r\nimport kotlinx.serialization.encoding.*\r\n\r\nobject Vec3Serializer : KSerializer<Vec3> {\r\n  @kotlinx.serialization.InternalSerializationApi\r\n  override val descriptor: SerialDescriptor =\r\n    buildSerialDescriptor(\"vision.gears.Vec3\", StructureKind.LIST)\r\n  override fun deserialize(decoder: Decoder): Vec3 {\r\n    val input = decoder as? JsonDecoder ?: throw SerializationException(\"Expected Json Input\")\r\n    val array = input.decodeJsonElement() as? JsonArray ?: throw SerializationException(\"Expected JsonArray\")\r\n    return Vec3(\r\n      (array[0] as? JsonPrimitive)?.float ?: 0.0f,\r\n      (array[1] as? JsonPrimitive)?.float ?: 0.0f,\r\n      (array[2] as? JsonPrimitive)?.float ?: 0.0f\r\n    )\r\n  }\r\n  override fun serialize(encoder: Encoder, value : Vec3) {\r\n    val output = encoder as? JsonEncoder ?: throw SerializationException(\"This class can be saved only by Json\")\r\n    val array = buildJsonArray {\r\n      add(value.x)\r\n      add(value.y)\r\n      add(value.z)\r\n    }\r\n    output.encodeJsonElement(array)\r\n  }      \r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\n@Serializable(with = Vec3Serializer::class)\r\nclass Vec3(backingStorage: Float32Array?, offset: Int = 0) : UniformFloat {\r\n\r\n  constructor(u: Float = 0.0f, v: Float = 0.0f, s: Float = 0.0f) : this(null, 0){\r\n    storage[0] = u\r\n    storage[1] = v\r\n    storage[2] = s\r\n  }\r\n  constructor(other : Vec1, v: Float = 0.0f, s: Float = 0.0f) : this(other.storage[0], v, s){}\r\n  constructor(other : Vec2, s: Float = 0.0f) : this(other.storage[0], other.storage[1], s){}\r\n  constructor(other : Vec3) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n  constructor(other : Vec4) : this(other.storage[0]/other.storage[3], other.storage[1]/other.storage[3], other.storage[2]/other.storage[3]){}\r\n\r\n  override val storage: Float32Array = backingStorage?.subarray(offset, offset+3)?:Float32Array(3)\r\n  inline var x : Float\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline var y : Float\r\n    get() = storage[1]\r\n    set(value) { storage[1] = value }\r\n  inline var z : Float\r\n    get() = storage[2]\r\n    set(value) { storage[2] = value }\r\n  inline var xy : Vec2\r\n    get() = Vec2(storage)\r\n    set(value) { Vec2(storage).set(value) }\r\n  inline val xyz0 : Vec4\r\n    get() = Vec4(storage[0], storage[1], storage[2], 0.0f)    \r\n  inline val xyz1 : Vec4\r\n    get() = Vec4(storage[0], storage[1], storage[2], 1.0f)\r\n\r\n  inline fun clone() : Vec3 {\r\n    return Vec3(this)\r\n  }\r\n\r\n  override fun set(vararg values : Float) : Vec3 {\r\n    storage[0] = values.getOrElse(0) {0.0f}\r\n    storage[1] = values.getOrElse(1) {0.0f}\r\n    storage[2] = values.getOrElse(2) {0.0f}\r\n    return this \r\n  }\r\n\r\n  companion object {\r\n    val zeros = Vec3()\r\n    val ones = Vec3(1.0f, 1.0f, 1.0f) \r\n\r\n    inline fun makeRandom(minVal: Vec3 = Vec3.zeros, maxVal: Vec3 = Vec3.ones) : Vec3 {\r\n      return Vec3(\r\n          Random.nextFloat() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0],\r\n          Random.nextFloat() * (maxVal.storage[1] - minVal.storage[1]) + minVal.storage[1],\r\n          Random.nextFloat() * (maxVal.storage[2] - minVal.storage[2]) + minVal.storage[2]                    \r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Float = 0.0f, maxVal: Float = 1.0f) : Vec3 {\r\n      return Vec3.makeRandom(Vec3(minVal, minVal, minVal), Vec3(maxVal, maxVal, maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun randomize(minVal: Vec3 = Vec3.zeros, maxVal: Vec3 = Vec3.ones){\r\n    set(Vec3.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun randomize(minVal: Float = 0.0f, maxVal: Float = 1.0f){\r\n    randomize(Vec3(minVal, minVal, minVal), Vec3(maxVal, maxVal, maxVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: Vec3 = Vec3.zeros, maxVal: Vec3 = Vec3.ones) : Vec3 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[1] < minVal.storage[1]){\r\n      storage[1] = minVal.storage[1]\r\n    }\r\n    if(storage[2] < minVal.storage[2]){\r\n      storage[2] = minVal.storage[2]\r\n    }\r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    if(storage[1] > maxVal.storage[1]){\r\n      storage[1] = maxVal.storage[1]\r\n    }\r\n    if(storage[2] > maxVal.storage[2]){\r\n      storage[2] = maxVal.storage[2]\r\n    }        \r\n    return this\r\n  }\r\n\r\n  infix fun getsIfLess(other : Vec3){\r\n    if(storage[0] > other.storage[0]){\r\n      storage[0] = other.storage[0]\r\n    }\r\n    if(storage[1] > other.storage[1]){\r\n      storage[1] = other.storage[1]\r\n    }\r\n    if(storage[2] > other.storage[2]){\r\n      storage[2] = other.storage[2]\r\n    }        \r\n  }\r\n\r\n  infix fun getsIfMore(other : Vec3){\r\n    if(storage[0] < other.storage[0]){\r\n      storage[0] = other.storage[0]\r\n    }\r\n    if(storage[1] < other.storage[1]){\r\n      storage[1] = other.storage[1]\r\n    }\r\n    if(storage[2] < other.storage[2]){\r\n      storage[2] = other.storage[2]\r\n    }        \r\n  }  \r\n\r\n  operator inline fun get(index : Int) : Float {\r\n    return storage[index]\r\n  }\r\n\r\n  operator fun set(index: Int, value: Float) {\r\n    storage[index] = value \r\n  }  \r\n\r\n  operator inline fun unaryPlus() : Vec3 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : Vec3 {\r\n    return Vec3(-storage[0], -storage[1], -storage[2])\r\n  }\r\n\r\n  operator inline fun times(scalar : Float) : Vec3 {\r\n    return Vec3(\r\n      storage[0] * scalar,\r\n      storage[1] * scalar,\r\n      storage[2] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Float) : Vec3 {\r\n    return Vec3(\r\n      storage[0] / scalar,\r\n      storage[1] / scalar,\r\n      storage[2] / scalar      \r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Float) {\r\n    storage[0] *= scalar\r\n    storage[1] *= scalar\r\n    storage[2] *= scalar    \r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Float) {\r\n    storage[0] /= scalar\r\n    storage[1] /= scalar\r\n    storage[2] /= scalar\r\n  }\r\n\r\n  operator inline fun plusAssign(other : Vec3) {\r\n    storage[0] += other.storage[0]\r\n    storage[1] += other.storage[1]\r\n    storage[2] += other.storage[2]\r\n  }\r\n\r\n  operator inline fun plus(other : Vec3) : Vec3 {\r\n    return Vec3(\r\n      storage[0] + other.storage[0],\r\n      storage[1] + other.storage[1],\r\n      storage[2] + other.storage[2]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : Vec3) {\r\n    storage[0] -= other.storage[0]\r\n    storage[1] -= other.storage[1]\r\n    storage[2] -= other.storage[2]\r\n  }\r\n\r\n  operator inline fun minus(other : Vec3) : Vec3 {\r\n    return Vec3(\r\n      storage[0] - other.storage[0],\r\n      storage[1] - other.storage[1],\r\n      storage[2] - other.storage[2]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : Vec3) {\r\n    storage[0] *= other.storage[0]\r\n    storage[1] *= other.storage[1]\r\n    storage[2] *= other.storage[2]\r\n  }\r\n\r\n  operator inline fun times(other : Vec3) : Vec3 {\r\n    return Vec3(\r\n      storage[0] * other.storage[0],\r\n      storage[1] * other.storage[1],\r\n      storage[2] * other.storage[2]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : Vec3) {\r\n    storage[0] /= other.storage[0]\r\n    storage[1] /= other.storage[1]\r\n    storage[2] /= other.storage[2]\r\n  }\r\n\r\n  operator inline fun div(other : Vec3) : Vec3 {\r\n    return Vec3(\r\n      storage[0] / other.storage[0],\r\n      storage[1] / other.storage[1],\r\n      storage[2] / other.storage[2]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Float {\r\n    return storage[0] * storage[0] + storage[1] * storage[1] + storage[2] * storage[2]\r\n  }\r\n\r\n  inline fun length() : Float {\r\n    return sqrt(lengthSquared())\r\n  }\r\n\r\n  inline fun normalize() : Vec3 {\r\n    val l = this.length()\r\n    storage[0] /= l\r\n    storage[1] /= l\r\n    storage[2] /= l\r\n    return this\r\n  }\r\n\r\n  infix inline fun dot(other : Vec3) : Float {\r\n    return (\r\n      storage[0] * other.storage[0] +\r\n      storage[1] * other.storage[1] +\r\n      storage[2] * other.storage[2] )\r\n  }\r\n\r\n  infix inline fun cross(other : Vec3) : Vec3 {\r\n    return Vec3(\r\n      storage[1] * other.storage[2] - storage[2] * other.storage[1],\r\n      storage[2] * other.storage[0] - storage[0] * other.storage[2],\r\n      storage[0] * other.storage[1] - storage[1] * other.storage[0])\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec3 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec3 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec3) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform3fv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.times(v: Vec3) = Vec3(v.x * this, v.y * this, v.z * this)\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.div(v: Vec3) = Vec3(this / v.x, this / v.y, this / v.z)","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\nimport kotlin.math.sqrt\r\n/*import kotlinx.serialization.*\r\nimport kotlinx.serialization.descriptors.*\r\nimport kotlinx.serialization.json.*\r\nimport kotlinx.serialization.encoding.*\r\n\r\nobject Vec3ArraySerializer : KSerializer<Vec3Array> {\r\n  @kotlinx.serialization.InternalSerializationApi\r\n  override val descriptor: SerialDescriptor =\r\n    buildSerialDescriptor(\"vision.gears.Vec3Array\", StructureKind.LIST)\r\n  override fun deserialize(decoder: Decoder): Vec3Array {\r\n    val input = decoder as? JsonDecoder ?: throw SerializationException(\"Expected Json Input\")\r\n    val array = input.decodeJsonElement() as? JsonArray ?: throw SerializationException(\"Expected JsonArray\")\r\n    val va = Vec3Array(array.size)\r\n    array.forEachIndexed{ (i : Int, e : JsonElement) ->\r\n      val qrr = e as? JsonArray ?: throw SerializationException(\"Expected JsonArray of JsonArrays\")\r\n      va.storage[i*3 + 0] = qrr?.getOrNull(0)?.float ?: 0.0f\r\n      va.storage[i*3 + 1] = qrr?.getOrNull(1)?.float ?: 0.0f\r\n      va.storage[i*3 + 2] = qrr?.getOrNull(2)?.float ?: 0.0f            \r\n    }\r\n    return va\r\n  }\r\n  override fun serialize(encoder: Encoder, value : Vec3Array) {\r\n    val output = encoder as? JsonEncoder ?: throw SerializationException(\"This class can be saved only by Json\")\r\n    val array = buildJsonArray {\r\n      for(i in 0 until storage.length/3) {\r\n        buildJsonArray {\r\n          add(storage[i*3+0])\r\n          add(storage[i*3+1])\r\n          add(storage[i*3+2])                \r\n        }\r\n      }\r\n    }\r\n    output.encodeJsonElement(array)\r\n  }      \r\n}\r\n\r\n@Serializable(with = Vec3ArraySerializer::class)*/\r\nclass Vec3Array(backingStorage: Float32Array?, startIndex: Int = 0, endIndex: Int = 0) : VecArray() {\r\n\r\n  constructor(size : Int) : this(null, size, size) {}\r\n\r\n  override val storage = backingStorage?.subarray(startIndex*3, endIndex*3)?:Float32Array(startIndex*3)\r\n\r\n  override fun set(vararg values : Float) : Vec3Array {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = values.getOrNull(i%3) ?: 0.0f\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator fun get(i : Int) : Vec3{\r\n    return Vec3(storage, i*3)\r\n  }\r\n\r\n  fun subarray(begin : Int, end : Int) : Vec3Array {\r\n    return Vec3Array(storage, begin, end)\r\n  }\r\n\r\n  fun setNormalized(b : Vec3Array) {\r\n    for(i in 0 until storage.length step 3) {\r\n      val l2 =\r\n        b.storage[i  ] * b.storage[i  ] +\r\n        b.storage[i+1] * b.storage[i+1] +\r\n        b.storage[i+2] * b.storage[i+2]\r\n      val linv = 1 / sqrt(l2)\r\n      storage[i  ] = b.storage[i  ] * linv\r\n      storage[i+1] = b.storage[i+1] * linv\r\n      storage[i+2] = b.storage[i+2] * linv\r\n    }\r\n  }\r\n\r\n  fun setCrossed(b : Vec3Array, c : Vec3Array) {\r\n    var j = 0\r\n    for(i in 0 until storage.length step 3) {\r\n      val b0 = b.storage[j]\r\n      val c0 = c.storage[j++]    \r\n      val b1 = b.storage[j]\r\n      val c1 = c.storage[j++]    \r\n      val b2 = b.storage[j]\r\n      val c2 = c.storage[j++]\r\n      storage[i  ] = b1 * c2 - b2 * c1\r\n      storage[i+1] = b2 * c0 - b0 * c2\r\n      storage[i+2] = b0 * c1 - b1 * c0 \r\n    }\r\n  }  \r\n\r\n  fun setAffineTransformed(v : Vec3Array, m : Mat4) {  \r\n    for(i in 0 until storage.length step 3) {\r\n      storage[i+0] =\r\n         v.storage[i+0] * m.storage[ 0] +\r\n         v.storage[i+1] * m.storage[ 1] +\r\n         v.storage[i+2] * m.storage[ 2] +\r\n                          m.storage[ 3]\r\n      storage[i+1] =\r\n         v.storage[i+0] * m.storage[ 4] +\r\n         v.storage[i+1] * m.storage[ 5] +\r\n         v.storage[i+2] * m.storage[ 6] +\r\n                          m.storage[ 7]\r\n      storage[i+2] =\r\n         v.storage[i+0] * m.storage[ 8] +\r\n         v.storage[i+1] * m.storage[ 9] +\r\n         v.storage[i+2] * m.storage[10] +\r\n                          m.storage[11]      \r\n    }\r\n  }\r\n\r\n  fun setAffineNormalTransformed(v : Vec3Array, m : Mat4) {  \r\n    for(i in 0 until storage.length step 3) {\r\n      storage[i+0] =\r\n         v.storage[i+0] * m.storage[ 0] +\r\n         v.storage[i+1] * m.storage[ 1] +\r\n         v.storage[i+2] * m.storage[ 2]\r\n      storage[i+1] =\r\n         v.storage[i+0] * m.storage[ 4] +\r\n         v.storage[i+1] * m.storage[ 5] +\r\n         v.storage[i+2] * m.storage[ 6]\r\n      storage[i+2] =\r\n         v.storage[i+0] * m.storage[ 8] +\r\n         v.storage[i+1] * m.storage[ 9] +\r\n         v.storage[i+2] * m.storage[10]      \r\n    }\r\n  }  \r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec3Array {\r\n    provider.register(property.name + \"[0]\", this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec3Array {\r\n    return this\r\n  }\r\n  \r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec3Array) {\r\n    set(value)\r\n  }  \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform3fv(uniformLocation, storage)\r\n  }  \r\n} ","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.sqrt\r\nimport kotlinx.serialization.*\r\nimport kotlinx.serialization.descriptors.*\r\nimport kotlinx.serialization.json.*\r\nimport kotlinx.serialization.encoding.*\r\n\r\nobject Vec4Serializer : KSerializer<Vec4> {\r\n  @kotlinx.serialization.InternalSerializationApi\r\n  override val descriptor: SerialDescriptor =\r\n    buildSerialDescriptor(\"vision.gears.Vec4\", StructureKind.LIST)\r\n  override fun deserialize(decoder: Decoder): Vec4 {\r\n    val input = decoder as? JsonDecoder ?: throw SerializationException(\"Expected Json Input\")\r\n    val array = input.decodeJsonElement() as? JsonArray ?: throw SerializationException(\"Expected JsonArray\")\r\n    return Vec4(\r\n      (array[0] as? JsonPrimitive)?.float ?: 0.0f,\r\n      (array[1] as? JsonPrimitive)?.float ?: 0.0f,\r\n      (array[2] as? JsonPrimitive)?.float ?: 0.0f,\r\n      (array[3] as? JsonPrimitive)?.float ?: 1.0f\r\n    )\r\n  }\r\n  override fun serialize(encoder: Encoder, value : Vec4) {\r\n    val output = encoder as? JsonEncoder ?: throw SerializationException(\"This class can be saved only by Json\")\r\n    val array = buildJsonArray {\r\n      add(value.x)\r\n      add(value.y)\r\n      add(value.z)\r\n      add(value.w)            \r\n    }\r\n    output.encodeJsonElement(array)\r\n  }      \r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\n@Serializable(with = Vec4Serializer::class)\r\nclass Vec4(backingStorage: Float32Array?, offset: Int = 0) : UniformFloat {\r\n\r\n  constructor(u: Float = 0.0f, v: Float = 0.0f, s: Float = 0.0f, t: Float = 1.0f) : this(null, 0){\r\n    storage[0] = u\r\n    storage[1] = v\r\n    storage[2] = s\r\n    storage[3] = t\r\n  }\r\n  constructor(other : Vec1, v: Float = 0.0f, s: Float = 0.0f, w: Float = 1.0f) : this(other.storage[0], v, s, w){}\r\n  constructor(other : Vec2, s: Float = 0.0f, w: Float = 1.0f) : this(other.storage[0], other.storage[1], s, w){}\r\n  constructor(other : Vec3, w: Float = 1.0f) : this(other.storage[0], other.storage[1], other.storage[2], w){}\r\n  constructor(other : Vec4) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Float32Array = backingStorage?.subarray(offset, offset+4)?:Float32Array(4)\r\n  inline var x : Float\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline var y : Float\r\n    get() = storage[1]\r\n    set(value) { storage[1] = value }\r\n  inline var z : Float\r\n    get() = storage[2]\r\n    set(value) { storage[2] = value }\r\n  inline var w : Float\r\n    get() = storage[3]\r\n    set(value) { storage[3] = value }    \r\n  inline var xy : Vec2\r\n    get() = Vec2(storage)\r\n    set(value) { Vec2(storage).set(value) }\r\n  inline var xyz : Vec3\r\n    get() = Vec3(storage)\r\n    set(value) { Vec3(storage).set(value) }\r\n\r\n  inline fun clone() : Vec4 {\r\n    return Vec4(this)\r\n  }\r\n\r\n  override fun set(vararg values : Float) : Vec4 {\r\n    storage[0] = values.getOrElse(0) {0.0f}\r\n    storage[1] = values.getOrElse(1) {0.0f}\r\n    storage[2] = values.getOrElse(2) {0.0f}\r\n    storage[3] = values.getOrElse(3) {1.0f}\r\n    return this \r\n  }\r\n\r\n  companion object {\r\n    val zeros = Vec4(0.0f, 0.0f, 0.0f, 0.0f)\r\n    val ones = Vec4(1.0f, 1.0f, 1.0f, 1.0f) \r\n\r\n    inline fun makeRandom(minVal: Vec4 = Vec4.zeros, maxVal: Vec4 = Vec4.ones) : Vec4 {\r\n      return Vec4(\r\n          Random.nextFloat() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0],\r\n          Random.nextFloat() * (maxVal.storage[1] - minVal.storage[1]) + minVal.storage[1],\r\n          Random.nextFloat() * (maxVal.storage[2] - minVal.storage[2]) + minVal.storage[2],                    \r\n          Random.nextFloat() * (maxVal.storage[3] - minVal.storage[3]) + minVal.storage[3]\r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Float = 0.0f, maxVal: Float = 1.0f) : Vec4 {\r\n      return Vec4.makeRandom(Vec4(minVal, minVal, minVal, minVal), Vec4(maxVal, maxVal, maxVal, maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun setRandom(minVal: Vec4 = Vec4.zeros, maxVal: Vec4 = Vec4.ones){\r\n    set(Vec4.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun setRandom(minVal: Float = 0.0f, maxVal: Float = 1.0f){\r\n    setRandom(Vec4(minVal, minVal, minVal, minVal), Vec4(maxVal, maxVal, maxVal, minVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: Vec4 = Vec4.zeros, maxVal: Vec4 = Vec4.ones) : Vec4 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[1] < minVal.storage[1]){\r\n      storage[1] = minVal.storage[1]\r\n    }\r\n    if(storage[2] < minVal.storage[2]){\r\n      storage[2] = minVal.storage[2]\r\n    }\r\n    if(storage[3] < minVal.storage[3]){\r\n      storage[3] = minVal.storage[3]\r\n    }    \r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    if(storage[1] > maxVal.storage[1]){\r\n      storage[1] = maxVal.storage[1]\r\n    }\r\n    if(storage[2] > maxVal.storage[2]){\r\n      storage[2] = maxVal.storage[2]\r\n    }        \r\n    if(storage[3] > maxVal.storage[3]){\r\n      storage[3] = maxVal.storage[3]\r\n    }            \r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryPlus() : Vec4 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : Vec4 {\r\n    return Vec4(-storage[0], -storage[1], -storage[2], -storage[3])\r\n  }\r\n\r\n  operator inline fun times(scalar : Float) : Vec4 {\r\n    return Vec4(\r\n      storage[0] * scalar,\r\n      storage[1] * scalar,\r\n      storage[2] * scalar,\r\n      storage[3] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Float) : Vec4 {\r\n    return Vec4(\r\n      storage[0] / scalar,\r\n      storage[1] / scalar,\r\n      storage[2] / scalar,\r\n      storage[3] / scalar      \r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Float) {\r\n    storage[0] *= scalar\r\n    storage[1] *= scalar\r\n    storage[2] *= scalar    \r\n    storage[3] *= scalar\r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Float) {\r\n    storage[0] /= scalar\r\n    storage[1] /= scalar\r\n    storage[2] /= scalar\r\n    storage[3] /= scalar\r\n  }  \r\n\r\n  operator inline fun plusAssign(other : Vec4) {\r\n    storage[0] += other.storage[0]\r\n    storage[1] += other.storage[1]\r\n    storage[2] += other.storage[2]\r\n    storage[3] += other.storage[3]\r\n  }\r\n\r\n  operator inline fun plus(other : Vec4) : Vec4 {\r\n    return Vec4(\r\n      storage[0] + other.storage[0],\r\n      storage[1] + other.storage[1],\r\n      storage[2] + other.storage[2],\r\n      storage[3] + other.storage[3]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : Vec4) {\r\n    storage[0] -= other.storage[0]\r\n    storage[1] -= other.storage[1]\r\n    storage[2] -= other.storage[2]\r\n    storage[3] -= other.storage[3]\r\n  }\r\n\r\n  operator inline fun minus(other : Vec4) : Vec4 {\r\n    return Vec4(\r\n      storage[0] - other.storage[0],\r\n      storage[1] - other.storage[1],\r\n      storage[2] - other.storage[2],\r\n      storage[3] - other.storage[3]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : Vec4) {\r\n    storage[0] *= other.storage[0]\r\n    storage[1] *= other.storage[1]\r\n    storage[2] *= other.storage[2]\r\n    storage[3] *= other.storage[3]\r\n  }\r\n\r\n  operator inline fun times(other : Vec4) : Vec4 {\r\n    return Vec4(\r\n      storage[0] * other.storage[0],\r\n      storage[1] * other.storage[1],\r\n      storage[2] * other.storage[2],\r\n      storage[3] * other.storage[3]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : Vec4) {\r\n    storage[0] /= other.storage[0]\r\n    storage[1] /= other.storage[1]\r\n    storage[2] /= other.storage[2]\r\n    storage[3] /= other.storage[3]\r\n  }\r\n\r\n  operator inline fun div(other : Vec4) : Vec4 {\r\n    return Vec4(\r\n      storage[0] / other.storage[0],\r\n      storage[1] / other.storage[1],\r\n      storage[2] / other.storage[2],\r\n      storage[3] / other.storage[3]\r\n      )\r\n  }\r\n\r\n  inline fun lengthSquared() : Float {\r\n    return storage[0] * storage[0] + storage[1] * storage[1] + storage[2] * storage[2] + storage[3] * storage[3]\r\n  }\r\n\r\n  inline fun length() : Float {\r\n    return sqrt(lengthSquared())\r\n  }\r\n\r\n  inline fun normalize() : Vec4 {\r\n    val l = this.length()\r\n    storage[0] /= l\r\n    storage[1] /= l\r\n    storage[2] /= l\r\n    storage[3] /= l    \r\n    return this\r\n  }\r\n\r\n  infix inline fun dot(other : Vec4) : Float {\r\n    return (\r\n      storage[0] * other.storage[0] +\r\n      storage[1] * other.storage[1] +\r\n      storage[2] * other.storage[2] +\r\n      storage[3] * other.storage[3] )\r\n  }\r\n\r\n  inline operator fun timesAssign(m : Mat4){\r\n    val t = Float32Array(storage)\r\n    storage[0] = m.storage[ 0] * t[0] + m.storage[ 1] * t[1] + m.storage[ 2] * t[2] + m.storage[ 3] * t[3]\r\n    storage[1] = m.storage[ 4] * t[0] + m.storage[ 5] * t[1] + m.storage[ 6] * t[2] + m.storage[ 7] * t[3]\r\n    storage[2] = m.storage[ 8] * t[0] + m.storage[ 9] * t[1] + m.storage[10] * t[2] + m.storage[11] * t[3]\r\n    storage[3] = m.storage[12] * t[0] + m.storage[13] * t[1] + m.storage[14] * t[2] + m.storage[15] * t[3]            \r\n  }\r\n\r\n  inline operator fun times(m : Mat4) : Vec4 {\r\n    val vp = Vec4(this)\r\n    vp.storage[0] = m.storage[ 0] * storage[0] + m.storage[ 1] * storage[1] + m.storage[ 2] * storage[2] + m.storage[ 3] * storage[3]\r\n    vp.storage[1] = m.storage[ 4] * storage[0] + m.storage[ 5] * storage[1] + m.storage[ 6] * storage[2] + m.storage[ 7] * storage[3]\r\n    vp.storage[2] = m.storage[ 8] * storage[0] + m.storage[ 9] * storage[1] + m.storage[10] * storage[2] + m.storage[11] * storage[3]\r\n    vp.storage[3] = m.storage[12] * storage[0] + m.storage[13] * storage[1] + m.storage[14] * storage[2] + m.storage[15] * storage[3]        \r\n    return vp    \r\n  }  \r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec4 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec4 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec4) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform4fv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.times(v: Vec4) = Vec4(this * v.storage[0], this * v.storage[1], this * v.storage[2], this * v.storage[3])\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.div(v: Vec4) = Vec4(this / v.storage[0], this / v.storage[1], this / v.storage[2], this / v.storage[3])\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\nimport kotlin.math.sqrt\r\n\r\nclass Vec4Array(backingStorage: Float32Array?, startIndex: Int = 0, endIndex: Int = 0) : VecArray() {\r\n\r\n  constructor(size : Int) : this(null, size, size) {}\r\n\r\n  override val storage = backingStorage?.subarray(startIndex*4, endIndex*4)?:Float32Array(startIndex*4)\r\n\r\n  override fun set(vararg values : Float) : Vec4Array {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = values.getOrNull(i%4) ?: if(i%4 == 3) 1.0f else 0.0f\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator fun get(i : Int) : Vec4{\r\n    return Vec4(storage, i*4)\r\n  }\r\n\r\n  fun subarray(begin : Int, end : Int) : Vec4Array {\r\n    return Vec4Array(storage, begin, end)\r\n  }\r\n\r\n  fun setNormalized(b : Vec4Array) {\r\n    for(i in 0 until storage.length step 4) {\r\n      val l2 =\r\n        b.storage[i  ] * b.storage[i  ] +\r\n        b.storage[i+1] * b.storage[i+1] +\r\n        b.storage[i+2] * b.storage[i+2] +\r\n        b.storage[i+3] * b.storage[i+3]        \r\n      val linv = 1 / sqrt(l2)\r\n      storage[i  ] = b.storage[i  ] * linv\r\n      storage[i+1] = b.storage[i+1] * linv\r\n      storage[i+2] = b.storage[i+2] * linv\r\n      storage[i+3] = b.storage[i+3] * linv      \r\n    }\r\n  }\r\n\r\n  fun setTransformed(v : Vec4Array, m : Mat4) {  \r\n    for(i in 0 until storage.length step 4) {\r\n      storage[i+0] =\r\n          v.storage[i+0] * m.storage[ 0] +\r\n          v.storage[i+1] * m.storage[ 1] +\r\n          v.storage[i+2] * m.storage[ 2] +\r\n          v.storage[i+3] * m.storage[ 3]\r\n      storage[i+1] =\r\n          v.storage[i+0] * m.storage[ 4] +\r\n          v.storage[i+1] * m.storage[ 5] +\r\n          v.storage[i+2] * m.storage[ 6] +\r\n          v.storage[i+3] * m.storage[ 7]\r\n      storage[i+2] =\r\n          v.storage[i+0] * m.storage[ 8] +\r\n          v.storage[i+1] * m.storage[ 9] +\r\n          v.storage[i+2] * m.storage[10] +\r\n          v.storage[i+3] * m.storage[11]\r\n      storage[i+3] =\r\n          v.storage[i+0] * m.storage[12] +\r\n          v.storage[i+1] * m.storage[13] +\r\n          v.storage[i+2] * m.storage[14] +\r\n          v.storage[i+3] * m.storage[15]                \r\n    }\r\n  }\r\n\r\n  fun transformNormal(v : Vec3Array, m : Mat4) {  \r\n    for(i in 0 until storage.length step 3) {\r\n      storage[i+0] =\r\n         v.storage[i+0] * m.storage[ 0] +\r\n         v.storage[i+1] * m.storage[ 1] +\r\n         v.storage[i+2] * m.storage[ 2]\r\n      storage[i+1] =\r\n         v.storage[i+0] * m.storage[ 4] +\r\n         v.storage[i+1] * m.storage[ 5] +\r\n         v.storage[i+2] * m.storage[ 6]\r\n      storage[i+2] =\r\n         v.storage[i+0] * m.storage[ 8] +\r\n         v.storage[i+1] * m.storage[ 9] +\r\n         v.storage[i+2] * m.storage[10]      \r\n    }\r\n  }  \r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec4Array {\r\n    provider.register(property.name + \"[0]\", this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec4Array {\r\n    return this\r\n  }\r\n  \r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec4Array) {\r\n    set(value)\r\n  }    \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform4fv(uniformLocation, storage)\r\n  }  \r\n} ","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\n\r\ninterface Gif {\r\n  operator fun invoke(i : Int) : Float\r\n}\r\n\r\nabstract class VecArray : UniformFloat, Gif {\r\n\r\n  override operator fun invoke(i : Int) : Float{\r\n    return storage[i % storage.length]\r\n  }\r\n\r\n  infix fun gets(other : Gif){\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = other(i)\r\n    }\r\n  }\r\n\r\n  operator fun plus(c : Gif) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i) + c(i)\r\n      }\r\n    }\r\n  }\r\n\r\n  operator fun minus(c : Gif) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i) - c(i)\r\n      }\r\n    }\r\n  }\r\n\r\n  operator fun times(c : Gif) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i) * c(i)\r\n      }\r\n    }\r\n  }\r\n\r\n  operator fun div(c : Gif) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i) / c(i)\r\n      }\r\n    }\r\n  }      \r\n\r\n  operator fun times(s : Float) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i) * s\r\n      }\r\n    }\r\n  }\r\n\r\n  operator fun div(s : Float) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i) / s\r\n      }\r\n    }\r\n  }\r\n\r\n  fun expand(factor : Int) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i / factor)\r\n      }\r\n    }    \r\n  }\r\n\r\n  operator fun plusAssign(other : Gif) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] += other(i)\r\n    }\r\n  }\r\n\r\n  operator fun minusAssign(other : Gif) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] -= other(i)\r\n    }\r\n  }  \r\n\r\n  operator fun timesAssign(other : Gif) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] *= other(i)\r\n    }\r\n  }\r\n\r\n  operator fun divAssign(other : Gif) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] /= other(i)\r\n    }\r\n  }  \r\n\r\n  operator fun timesAssign(s : Float) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] *= s\r\n    }\r\n  }\r\n\r\n  operator fun divAssign(s : Float) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] /= s\r\n    }\r\n  }  \r\n\r\n  fun powAssign(s : Float) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = storage[i].pow(s)\r\n    }\r\n  }\r\n\r\n  fun randomize() {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = Random.nextFloat()\r\n    }\r\n  }\r\n\r\n  fun clamp() {\r\n    for(i in 0 until storage.length) {\r\n      if(storage[i] < 0.0f) {\r\n        storage[i] = 0.0f\r\n      }\r\n      if(storage[i] > 1.0f) {\r\n        storage[i] = 1.0f\r\n      }\r\n    }\r\n  }  \r\n\r\n}\r\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(145);\n"],"names":["root","factory","exports","module","define","amd","globalThis","gl","uniformLocation","samplerIndex","length","values","i","this","event","console","log","x","y","stopPropagation","canvas","overlay","getContext","Scene","program","UniformProvider","material","geometry","vertexShader","fragmentShader","attributeBindings","createProgram","attachShader","attributeIndex","element","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","ProgramReflection","Geometry","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","createVertexArray","bindVertexArray","enableVertexAttribArray","vertexAttribPointer","FLOAT","OrthoCamera","Shader","VERTEX_SHADER","FRAGMENT_SHADER","Program","QuadGeometry","TriangleGeometry","Material","Mesh","match","v","shaderType","sourceUrl","createShader","request","XMLHttpRequest","overrideMimeType","open","$request","$errorMessage","errorMessage","onloadend","source","responseText","marked","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorPrefix","getShaderInfoLog","responseURL","send","Drawable","u","backingStorage","offset","subarray","Int32Array","size","startIndex","endIndex","IVecArray","s","t","elements","getOrNull","allElements","set","name","type","location","mapOf","Vec1","WebGLRenderingContext","Vec2","FLOAT_VEC2","Vec3","FLOAT_VEC3","Vec4","FLOAT_VEC4","Vec1Array","Vec2Array","Vec3Array","Vec4Array","Mat4","FLOAT_MAT4","IVec1","INT","IVec2","INT_VEC2","IVec3","INT_VEC3","IVec4","INT_VEC4","Sampler2D","SAMPLER_2D","Sampler3D","SamplerCube","SAMPLER_CUBE","glProgram","ACTIVE_UNIFORMS","nUniforms","getActiveUniform","glUniform","nameParts","split","lastOrNull","uniformName","dropLast","structName","getUniformLocation","UniformDescriptor","debugName","glslStructNames","VecArray","width","clientWidth","height","clientHeight","document","onkeydown","keyCode","onkeyup","onmousedown","onmousemove","onmouseup","onmouseout","window","requestAnimationFrame","index","ar","value","drawElements","TRIANGLES","UNSIGNED_SHORT","viewport","keysPressed","Date","getTime","clearColor","clearDepth","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","target","uniformProviders","uniform1iv","uniform2iv","uniform3iv","uniform4iv","sx","sy","sz","angle","axisX","axisY","axisZ","z","axisLength2","axisLength","cosa","sina","C","m11","m21","m31","m12","m22","m32","m13","m23","m33","t0","t4","t8","t1","t5","t9","t2","t6","t10","t3","t7","t11","a00","a01","a02","a03","m000","m001","m002","m003","m100","m101","m102","m103","m200","m201","m202","m203","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","m010","m011","det","invDet","provider","property","uniformMatrix4fv","arraySize","UNSIGNED_INT","uniformDesc","reflectionVariable","existingVariable","useProgram","textureUnitCount","descList","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","warn","TEXTURE_CUBE_MAP","uniform","error","children","addAll","ga","uniform1fv","uniform2fv","uniform4fv","uniform3fv","getElementById","innerHTML","App","e","message","LN2","a","b","O","len","relativeStart","k","end","relativeEnd","finalValue","TypedArray","asUint","<this>","separator","prefix","postfix","limit","truncated","transform","buffer","count","destination","item","collection","iterator","single","initialCapacity","loadFactor","minimumValue","maximumValue","to","other","low","high","interfaces","maxSize","masks","currentSize","imask","iid","iidImask","capacity","result","mask","activeBit","numberIndex","intArray","numberWithSettledBit","obj","ia","hash","descriptor","proto","o","obj1","obj2","typeOf","shiftNumber","MASK","bigNumber","hashCode","signum","chunk","hashCodeMap","symbol","cachedHashCode","str","code","instance","constructorFunction","constructor","this_","cause","thisNeg","otherNeg","a48","a32","a16","b48","b32","b16","c48","c32","c16","c00","approx","numBits","res","rem","approxDouble","approx2","log2","delta","approxRes","approxRem","radix","radixLong","div","digitsPerTime","radixToPower","remDiv","digits","twoPwr32","kind","defaultConstructor","associatedObjectKey","associatedObjects","suspendArity","ctor","parent","metadata","start","endInclusive","iface","possibleActiveBit","fromIndex","toIndex","newSize","defaultValue","array","internalMap","backing","map","hashSize","n","extraCapacity","spareCapacity","gaps","minCapacity","src","dst","srcLen","dstLen","arr","newHashSize","key","updateHashArray","j","valuesArray","probesLeft","removedHash","hole","probeDistance","patchAttemptsLeft","keysArray","presenceArray","hashArray","maxProbeDistance","jClass","givenSimpleName","isInstanceFunction","jClasses","kClass","content","uppercase","char","ch","diff","needle","bottom","top","middle","isNegative","firstChar","limitForMaxRadix","limitBeforeMul","digit","input","$replacement","replacement","groupName","groups","groupIndex","pattern","options","from","nextPattern","groupCount","newGroupIndex","$match","$range","$nextPattern","$input","ignoreCase","n1","n2","min","thisChar","otherChar","thisOffset","otherOffset","entry","sequence","transformer","c","mod","first","last","step","thisUpper","otherUpper","chars","charAtIndex","range","string","getNextMatch","indices","second","that","l","modified","amount","previous","sb","tentativeMaxProbeDistance","putIndex","curValuesArray","newValuesArray","oldValue","it","arity","$arity","stringCsq","lastStart","foundMatch","code1","code2","oldCapacity","newCapacity","otherIterator","ourValue","rangeStart","rangeEnd","m","args","typed","list","pairs","paramCount","superType","getter","setter","delimiters","delimiter","currentOffset","nextIndex","isLimited","$delimitersList","$ignoreCase","strings","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}